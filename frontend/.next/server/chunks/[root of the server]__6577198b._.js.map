{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 8, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/mercelvubangsi/Documents/MY%20DOCS/MIU/STUDIES/CS425%20SWE/PROJECT/new/frontend/src/lib/mongodb.ts"],"sourcesContent":["import { MongoClient } from 'mongodb';\n\nconst uri = process.env.MONGODB_URI || 'mongodb://localhost:27017';\nconst dbName = process.env.MONGODB_DB || 'flight-booking';\n\nlet cachedClient: MongoClient;\nlet cachedDb: any;\n\nexport async function connectToDatabase() {\n  if (cachedClient && cachedDb) {\n    return { client: cachedClient, db: cachedDb };\n  }\n\n  const client = new MongoClient(uri);\n  await client.connect();\n  const db = client.db(dbName);\n\n  cachedClient = client;\n  cachedDb = db;\n\n  return { client, db };\n}"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW,IAAI;AACvC,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEzC,IAAI;AACJ,IAAI;AAEG,eAAe;IACpB,IAAI,gBAAgB,UAAU;QAC5B,OAAO;YAAE,QAAQ;YAAc,IAAI;QAAS;IAC9C;IAEA,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;IAC/B,MAAM,OAAO,OAAO;IACpB,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,eAAe;IACf,WAAW;IAEX,OAAO;QAAE;QAAQ;IAAG;AACtB","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/mercelvubangsi/Documents/MY%20DOCS/MIU/STUDIES/CS425%20SWE/PROJECT/new/frontend/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from 'next-auth';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport { connectToDatabase } from '../../../../lib/mongodb';\nimport { compare } from 'bcryptjs';\n\nexport const authOptions = {\n  providers: [\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email' },\n        password: { label: 'Password', type: 'password' },\n      },\n      authorize: async (credentials) => {\n        const { db } = await connectToDatabase();\n\n        // Find user by email\n        const user = await db.collection('users').findOne({ email: credentials?.email });\n\n        if (!user) {\n          throw new Error('No user found with this email');\n        }\n\n        // Compare passwords\n        const isValid = await compare(credentials?.password || '', user.password);\n\n        if (!isValid) {\n          throw new Error('Invalid password');\n        }\n\n        // Return user object without password\n        const { password, ...userWithoutPassword } = user; // Destructure to exclude password\n        return userWithoutPassword; // Return the user object without the password\n      },\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) token.user = user; // Store user in token\n      return token;\n    },\n    async session({ session, token }) {\n      session.user = token.user; // Attach user to session\n      return session;\n    },\n  },\n  pages: {\n    signIn: '/auth/login',\n  },\n};\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;AAEO,MAAM,cAAc;IACzB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,WAAW,OAAO;gBAChB,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,uHAAA,CAAA,oBAAiB,AAAD;gBAErC,qBAAqB;gBACrB,MAAM,OAAO,MAAM,GAAG,UAAU,CAAC,SAAS,OAAO,CAAC;oBAAE,OAAO,aAAa;gBAAM;gBAE9E,IAAI,CAAC,MAAM;oBACT,MAAM,IAAI,MAAM;gBAClB;gBAEA,oBAAoB;gBACpB,MAAM,UAAU,MAAM,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD,EAAE,aAAa,YAAY,IAAI,KAAK,QAAQ;gBAExE,IAAI,CAAC,SAAS;oBACZ,MAAM,IAAI,MAAM;gBAClB;gBAEA,sCAAsC;gBACtC,MAAM,EAAE,QAAQ,EAAE,GAAG,qBAAqB,GAAG,MAAM,kCAAkC;gBACrF,OAAO,qBAAqB,8CAA8C;YAC5E;QACF;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM,MAAM,IAAI,GAAG,MAAM,sBAAsB;YACnD,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG,MAAM,IAAI,EAAE,yBAAyB;YACpD,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}