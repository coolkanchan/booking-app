(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_d657d4e0._.js", {

"[project]/node_modules/@mui/utils/esm/debounce/debounce.js [app-client] (ecmascript) <export default as unstable_debounce>": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "unstable_debounce": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$debounce$2f$debounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$debounce$2f$debounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/utils/esm/debounce/debounce.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>isMuiElement)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
function isMuiElement(element, muiNames) {
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(element) && muiNames.indexOf(// For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    element.type.muiName ?? element.type?._payload?.value?.muiName) !== -1;
}
}}),
"[project]/node_modules/@mui/utils/esm/useControlled/useControlled.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>useControlled)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored
/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
'use client';
;
function useControlled({ controlled, default: defaultProp, name, state = 'value' }) {
    // isControlled is ignored in the hook dependency lists as it should never change.
    const { current: isControlled } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(controlled !== undefined);
    const [valueState, setValue] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(defaultProp);
    const value = isControlled ? controlled : valueState;
    if ("TURBOPACK compile-time truthy", 1) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
            "useControlled.useEffect": ()=>{
                if (isControlled !== (controlled !== undefined)) {
                    console.error([
                        `MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`,
                        'Elements should not switch from uncontrolled to controlled (or vice versa).',
                        `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.',
                        "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.",
                        'More info: https://fb.me/react-controlled-components'
                    ].join('\n'));
                }
            }
        }["useControlled.useEffect"], [
            state,
            name,
            controlled
        ]);
        const { current: defaultValue } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(defaultProp);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
            "useControlled.useEffect": ()=>{
                // Object.is() is not equivalent to the === operator.
                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is for more details.
                if (!isControlled && !Object.is(defaultValue, defaultProp)) {
                    console.error([
                        `MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`
                    ].join('\n'));
                }
            }
        }["useControlled.useEffect"], [
            JSON.stringify(defaultProp)
        ]);
    }
    const setValueIfUncontrolled = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useControlled.useCallback[setValueIfUncontrolled]": (newValue)=>{
            if (!isControlled) {
                setValue(newValue);
            }
        }
    }["useControlled.useCallback[setValueIfUncontrolled]"], []);
    return [
        value,
        setValueIfUncontrolled
    ];
}
}}),
"[project]/node_modules/@mui/utils/esm/requirePropFactory/requirePropFactory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>requirePropFactory)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
function requirePropFactory(componentNameInError, Component) {
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    // eslint-disable-next-line react/forbid-foreign-prop-types
    const prevPropTypes = Component ? {
        ...Component.propTypes
    } : null;
    const requireProp = (requiredProp)=>(props, propName, componentName, location, propFullName, ...args)=>{
            const propFullNameSafe = propFullName || propName;
            const defaultTypeChecker = prevPropTypes?.[propFullNameSafe];
            if (defaultTypeChecker) {
                const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);
                if (typeCheckerResult) {
                    return typeCheckerResult;
                }
            }
            if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {
                return new Error(`The prop \`${propFullNameSafe}\` of ` + `\`${componentNameInError}\` can only be used together with the \`${requiredProp}\` prop.`);
            }
            return null;
        };
    return requireProp;
}
}}),
"[project]/node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js [app-client] (ecmascript) <export default as chainPropTypes>": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "chainPropTypes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$chainPropTypes$2f$chainPropTypes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$chainPropTypes$2f$chainPropTypes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@mui/utils/esm/refType/refType.js [app-client] (ecmascript) <export default as refType>": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "refType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$refType$2f$refType$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$refType$2f$refType$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/utils/esm/refType/refType.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@mui/system/esm/breakpoints/breakpoints.js [app-client] (ecmascript) <export resolveBreakpointValues as unstable_resolveBreakpointValues>": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "unstable_resolveBreakpointValues": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$breakpoints$2f$breakpoints$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveBreakpointValues"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$breakpoints$2f$breakpoints$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/system/esm/breakpoints/breakpoints.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@mui/icons-material/esm/Flight.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5z"
}), 'Flight');
}}),
"[project]/node_modules/@mui/icons-material/esm/AttachMoney.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4"
}), 'AttachMoney');
}}),
"[project]/node_modules/@mui/icons-material/esm/Chair.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])([
    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
        d: "M7 11v2h10v-2c0-1.86 1.28-3.41 3-3.86V6c0-1.65-1.35-3-3-3H7C5.35 3 4 4.35 4 6v1.14c1.72.45 3 2 3 3.86"
    }, "0"),
    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
        d: "M21 9c-1.1 0-2 .9-2 2v4H5v-4c0-1.1-.9-2-2-2s-2 .9-2 2v5c0 1.65 1.35 3 3 3v1c0 .55.45 1 1 1s1-.45 1-1v-1h12v1c0 .55.45 1 1 1s1-.45 1-1v-1c1.65 0 3-1.35 3-3v-5c0-1.1-.9-2-2-2"
    }, "1")
], 'Chair');
}}),
"[project]/node_modules/@mui/icons-material/esm/Payment.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2m0 14H4v-6h16zm0-10H4V6h16z"
}), 'Payment');
}}),
"[project]/node_modules/@mui/icons-material/esm/Close.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), 'Close');
}}),
"[project]/node_modules/@mui/icons-material/esm/Business.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z"
}), 'Business');
}}),
"[project]/node_modules/@mui/icons-material/esm/Email.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z"
}), 'Email');
}}),
"[project]/node_modules/@mui/icons-material/esm/Phone.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z"
}), 'Phone');
}}),
"[project]/node_modules/@mui/icons-material/esm/LocationOn.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5"
}), 'LocationOn');
}}),
"[project]/node_modules/@mui/icons-material/esm/CardMembership.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M20 2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v5l4-2 4 2v-5h4c1.11 0 2-.89 2-2V4c0-1.11-.89-2-2-2m0 13H4v-2h16zm0-5H4V4h16z"
}), 'CardMembership');
}}),
"[project]/node_modules/@mui/icons-material/esm/AirplaneTicket.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M20.19 4H4c-1.1 0-1.99.9-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.81-2-1.81-2m-2.46 9.3-8.86 2.36-1.66-2.88.93-.25 1.26.99 2.39-.64-2.4-4.16 1.4-.38 4.01 3.74 2.44-.65c.51-.14 1.04.17 1.18.68.13.51-.17 1.04-.69 1.19"
}), 'AirplaneTicket');
}}),
"[project]/node_modules/@mui/icons-material/esm/FlightTakeoff.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
    d: "M2.5 19h19v2h-19zm19.57-9.36c-.21-.8-1.04-1.28-1.84-1.06L14.92 10l-6.9-6.43-1.93.51 4.14 7.17-4.97 1.33-1.97-1.54-1.45.39 2.59 4.49s7.12-1.9 16.57-4.43c.81-.23 1.28-1.05 1.07-1.85"
}), 'FlightTakeoff');
}}),
"[project]/node_modules/@mui/icons-material/esm/AccessTime.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@mui/material/utils/createSvgIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
"use client";
;
;
const __TURBOPACK__default__export__ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$utils$2f$createSvgIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])([
    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
        d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8"
    }, "0"),
    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
        d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
    }, "1")
], 'AccessTime');
}}),
"[project]/node_modules/@babel/runtime/helpers/esm/typeof.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>_typeof)
});
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
;
}}),
"[project]/node_modules/fflate/esm/browser.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, d: __dirname } = __turbopack_context__;
{
// DEFLATE is a complex format; to read this code, you should probably check the RFC first:
// https://tools.ietf.org/html/rfc1951
// You may also wish to take a look at the guide I made about this program:
// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad
// Much of the following code is similar to that of UZIP.js:
// https://github.com/photopea/UZIP.js
// Many optimizations have been made, so the bundle size is ultimately smaller but performance is similar.
// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint
// is better for memory in most engines (I *think*).
__turbopack_context__.s({
    "AsyncCompress": (()=>AsyncGzip),
    "AsyncDecompress": (()=>AsyncDecompress),
    "AsyncDeflate": (()=>AsyncDeflate),
    "AsyncGunzip": (()=>AsyncGunzip),
    "AsyncGzip": (()=>AsyncGzip),
    "AsyncInflate": (()=>AsyncInflate),
    "AsyncUnzlib": (()=>AsyncUnzlib),
    "AsyncZlib": (()=>AsyncZlib),
    "Compress": (()=>Gzip),
    "Decompress": (()=>Decompress),
    "Deflate": (()=>Deflate),
    "Gunzip": (()=>Gunzip),
    "Gzip": (()=>Gzip),
    "Inflate": (()=>Inflate),
    "Unzlib": (()=>Unzlib),
    "Zlib": (()=>Zlib),
    "compress": (()=>gzip),
    "compressSync": (()=>gzipSync),
    "decompress": (()=>decompress),
    "decompressSync": (()=>decompressSync),
    "deflate": (()=>deflate),
    "deflateSync": (()=>deflateSync),
    "gunzip": (()=>gunzip),
    "gunzipSync": (()=>gunzipSync),
    "gzip": (()=>gzip),
    "gzipSync": (()=>gzipSync),
    "inflate": (()=>inflate),
    "inflateSync": (()=>inflateSync),
    "strFromU8": (()=>strFromU8),
    "strToU8": (()=>strToU8),
    "unzip": (()=>unzip),
    "unzipSync": (()=>unzipSync),
    "unzlib": (()=>unzlib),
    "unzlibSync": (()=>unzlibSync),
    "zip": (()=>zip),
    "zipSync": (()=>zipSync),
    "zlib": (()=>zlib),
    "zlibSync": (()=>zlibSync)
});
var ch2 = {};
var wk = function(c, id, msg, transfer, cb) {
    var u = ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([
        c
    ], {
        type: 'text/javascript'
    })));
    var w = new Worker(u);
    w.onerror = function(e) {
        return cb(e.error, null);
    };
    w.onmessage = function(e) {
        return cb(null, e.data);
    };
    w.postMessage(msg, transfer);
    return w;
};
// aliases for shorter compressed code (most minifers don't do this)
var u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;
// fixed length extra bits
var fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    /* unused */ 0,
    0,
    /* impossible */ 0
]);
// fixed distance extra bits
// see fleb note
var fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    /* unused */ 0,
    0
]);
// code length index map
var clim = new u8([
    16,
    17,
    18,
    0,
    8,
    7,
    9,
    6,
    10,
    5,
    11,
    4,
    12,
    3,
    13,
    2,
    14,
    1,
    15
]);
// get base, reverse index map from extra bits
var freb = function(eb, start) {
    var b = new u16(31);
    for(var i = 0; i < 31; ++i){
        b[i] = start += 1 << eb[i - 1];
    }
    // numbers here are at max 18 bits
    var r = new u32(b[30]);
    for(var i = 1; i < 30; ++i){
        for(var j = b[i]; j < b[i + 1]; ++j){
            r[j] = j - b[i] << 5 | i;
        }
    }
    return [
        b,
        r
    ];
};
var _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];
// we can ignore the fact that the other numbers are wrong; they never happen anyway
fl[28] = 258, revfl[258] = 28;
var _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];
// map of value to reverse (assuming 16 bits)
var rev = new u16(32768);
for(var i = 0; i < 32768; ++i){
    // reverse table algorithm from SO
    var x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;
    x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;
    x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;
    rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;
}
// create huffman tree from u8 "map": index -> code length for code index
// mb (max bits) must be at most 15
// TODO: optimize/split up?
var hMap = function(cd, mb, r) {
    var s = cd.length;
    // index
    var i = 0;
    // u16 "map": index -> # of codes with bit length = index
    var l = new u16(mb);
    // length of cd must be 288 (total # of codes)
    for(; i < s; ++i)++l[cd[i] - 1];
    // u16 "map": index -> minimum code for bit length = index
    var le = new u16(mb);
    for(i = 0; i < mb; ++i){
        le[i] = le[i - 1] + l[i - 1] << 1;
    }
    var co;
    if (r) {
        // u16 "map": index -> number of actual bits, symbol for code
        co = new u16(1 << mb);
        // bits to remove for reverser
        var rvb = 15 - mb;
        for(i = 0; i < s; ++i){
            // ignore 0 lengths
            if (cd[i]) {
                // num encoding both symbol and bits read
                var sv = i << 4 | cd[i];
                // free bits
                var r_1 = mb - cd[i];
                // start value
                var v = le[cd[i] - 1]++ << r_1;
                // m is end value
                for(var m = v | (1 << r_1) - 1; v <= m; ++v){
                    // every 16 bit value starting with the code yields the same result
                    co[rev[v] >>> rvb] = sv;
                }
            }
        }
    } else {
        co = new u16(s);
        for(i = 0; i < s; ++i)co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];
    }
    return co;
};
// fixed length tree
var flt = new u8(288);
for(var i = 0; i < 144; ++i)flt[i] = 8;
for(var i = 144; i < 256; ++i)flt[i] = 9;
for(var i = 256; i < 280; ++i)flt[i] = 7;
for(var i = 280; i < 288; ++i)flt[i] = 8;
// fixed distance tree
var fdt = new u8(32);
for(var i = 0; i < 32; ++i)fdt[i] = 5;
// fixed length map
var flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);
// fixed distance map
var fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);
// find max of array
var max = function(a) {
    var m = a[0];
    for(var i = 1; i < a.length; ++i){
        if (a[i] > m) m = a[i];
    }
    return m;
};
// read d, starting at bit p and mask with m
var bits = function(d, p, m) {
    var o = p / 8 >> 0;
    return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;
};
// read d, starting at bit p continuing for at least 16 bits
var bits16 = function(d, p) {
    var o = p / 8 >> 0;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);
};
// get end of byte
var shft = function(p) {
    return (p / 8 >> 0) + (p & 7 && 1);
};
// typed array slice - allows garbage collector to free original reference,
// while being more compatible than .slice
var slc = function(v, s, e) {
    if (s == null || s < 0) s = 0;
    if (e == null || e > v.length) e = v.length;
    // can't use .constructor in case user-supplied
    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);
    n.set(v.subarray(s, e));
    return n;
};
// expands raw DEFLATE data
var inflt = function(dat, buf, st) {
    // source length
    var sl = dat.length;
    // have to estimate size
    var noBuf = !buf || st;
    // no state
    var noSt = !st || st.i;
    if (!st) st = {};
    // Assumes roughly 33% compression ratio average
    if (!buf) buf = new u8(sl * 3);
    // ensure buffer can fit at least l elements
    var cbuf = function(l) {
        var bl = buf.length;
        // need to increase size to fit
        if (l > bl) {
            // Double or set to necessary, whichever is greater
            var nbuf = new u8(Math.max(bl * 2, l));
            nbuf.set(buf);
            buf = nbuf;
        }
    };
    //  last chunk         bitpos           bytes
    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    // total bits
    var tbts = sl * 8;
    do {
        if (!lm) {
            // BFINAL - this is only 1 when last chunk is next
            st.f = final = bits(dat, pos, 1);
            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman
            var type = bits(dat, pos + 1, 3);
            pos += 3;
            if (!type) {
                // go to end of byte boundary
                var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;
                if (t > sl) {
                    if (noSt) throw 'unexpected EOF';
                    break;
                }
                // ensure size
                if (noBuf) cbuf(bt + l);
                // Copy over uncompressed data
                buf.set(dat.subarray(s, t), bt);
                // Get new bitpos, update byte count
                st.b = bt += l, st.p = pos = t * 8;
                continue;
            } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (type == 2) {
                //  literal                            lengths
                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
                var tl = hLit + bits(dat, pos + 5, 31) + 1;
                pos += 14;
                // length+distance tree
                var ldt = new u8(tl);
                // code length tree
                var clt = new u8(19);
                for(var i = 0; i < hcLen; ++i){
                    // use index map to get real code
                    clt[clim[i]] = bits(dat, pos + i * 3, 7);
                }
                pos += hcLen * 3;
                // code lengths bits
                var clb = max(clt), clbmsk = (1 << clb) - 1;
                if (!noSt && pos + tl * (clb + 7) > tbts) break;
                // code lengths map
                var clm = hMap(clt, clb, 1);
                for(var i = 0; i < tl;){
                    var r = clm[bits(dat, pos, clbmsk)];
                    // bits read
                    pos += r & 15;
                    // symbol
                    var s = r >>> 4;
                    // code length to copy
                    if (s < 16) {
                        ldt[i++] = s;
                    } else {
                        //  copy   count
                        var c = 0, n = 0;
                        if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];
                        else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;
                        else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;
                        while(n--)ldt[i++] = c;
                    }
                }
                //    length tree                 distance tree
                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
                // max length bits
                lbt = max(lt);
                // max dist bits
                dbt = max(dt);
                lm = hMap(lt, lbt, 1);
                dm = hMap(dt, dbt, 1);
            } else throw 'invalid block type';
            if (pos > tbts) throw 'unexpected EOF';
        }
        // Make sure the buffer can hold this + the largest possible addition
        // Maximum chunk size (practically, theoretically infinite) is 2^17;
        if (noBuf) cbuf(bt + 131072);
        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        var mxa = lbt + dbt + 18;
        while(noSt || pos + mxa < tbts){
            // bits read, code
            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;
            pos += c & 15;
            if (pos > tbts) throw 'unexpected EOF';
            if (!c) throw 'invalid length/literal';
            if (sym < 256) buf[bt++] = sym;
            else if (sym == 256) {
                lm = null;
                break;
            } else {
                var add = sym - 254;
                // no extra bits needed if less
                if (sym > 264) {
                    // index
                    var i = sym - 257, b = fleb[i];
                    add = bits(dat, pos, (1 << b) - 1) + fl[i];
                    pos += b;
                }
                // dist
                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;
                if (!d) throw 'invalid distance';
                pos += d & 15;
                var dt = fd[dsym];
                if (dsym > 3) {
                    var b = fdeb[dsym];
                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
                }
                if (pos > tbts) throw 'unexpected EOF';
                if (noBuf) cbuf(bt + 131072);
                var end = bt + add;
                for(; bt < end; bt += 4){
                    buf[bt] = buf[bt - dt];
                    buf[bt + 1] = buf[bt + 1 - dt];
                    buf[bt + 2] = buf[bt + 2 - dt];
                    buf[bt + 3] = buf[bt + 3 - dt];
                }
                bt = end;
            }
        }
        st.l = lm, st.p = pos, st.b = bt;
        if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    }while (!final)
    return bt == buf.length ? buf : slc(buf, 0, bt);
};
// starting at p, write the minimum number of bits that can hold v to d
var wbits = function(d, p, v) {
    v <<= p & 7;
    var o = p / 8 >> 0;
    d[o] |= v;
    d[o + 1] |= v >>> 8;
};
// starting at p, write the minimum number of bits (>8) that can hold v to d
var wbits16 = function(d, p, v) {
    v <<= p & 7;
    var o = p / 8 >> 0;
    d[o] |= v;
    d[o + 1] |= v >>> 8;
    d[o + 2] |= v >>> 16;
};
// creates code lengths from a frequency table
var hTree = function(d, mb) {
    // Need extra info to make a tree
    var t = [];
    for(var i = 0; i < d.length; ++i){
        if (d[i]) t.push({
            s: i,
            f: d[i]
        });
    }
    var s = t.length;
    var t2 = t.slice();
    if (!s) return [
        new u8(0),
        0
    ];
    if (s == 1) {
        var v = new u8(t[0].s + 1);
        v[t[0].s] = 1;
        return [
            v,
            1
        ];
    }
    t.sort(function(a, b) {
        return a.f - b.f;
    });
    // after i2 reaches last ind, will be stopped
    // freq must be greater than largest possible number of symbols
    t.push({
        s: -1,
        f: 25001
    });
    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;
    t[0] = {
        s: -1,
        f: l.f + r.f,
        l: l,
        r: r
    };
    // efficient algorithm from UZIP.js
    // i0 is lookbehind, i2 is lookahead - after processing two low-freq
    // symbols that combined have high freq, will start processing i2 (high-freq,
    // non-composite) symbols instead
    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/
    while(i1 != s - 1){
        l = t[t[i0].f < t[i2].f ? i0++ : i2++];
        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];
        t[i1++] = {
            s: -1,
            f: l.f + r.f,
            l: l,
            r: r
        };
    }
    var maxSym = t2[0].s;
    for(var i = 1; i < s; ++i){
        if (t2[i].s > maxSym) maxSym = t2[i].s;
    }
    // code lengths
    var tr = new u16(maxSym + 1);
    // max bits in tree
    var mbt = ln(t[i1 - 1], tr, 0);
    if (mbt > mb) {
        // more algorithms from UZIP.js
        // TODO: find out how this code works (debt)
        //  ind    debt
        var i = 0, dt = 0;
        //    left            cost
        var lft = mbt - mb, cst = 1 << lft;
        t2.sort(function(a, b) {
            return tr[b.s] - tr[a.s] || a.f - b.f;
        });
        for(; i < s; ++i){
            var i2_1 = t2[i].s;
            if (tr[i2_1] > mb) {
                dt += cst - (1 << mbt - tr[i2_1]);
                tr[i2_1] = mb;
            } else break;
        }
        dt >>>= lft;
        while(dt > 0){
            var i2_2 = t2[i].s;
            if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;
            else ++i;
        }
        for(; i >= 0 && dt; --i){
            var i2_3 = t2[i].s;
            if (tr[i2_3] == mb) {
                --tr[i2_3];
                ++dt;
            }
        }
        mbt = mb;
    }
    return [
        new u8(tr),
        mbt
    ];
};
// get the max length and assign length codes
var ln = function(n, l, d) {
    return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;
};
// length codes generation
var lc = function(c) {
    var s = c.length;
    // Note that the semicolon was intentional
    while(s && !c[--s]);
    var cl = new u16(++s);
    //  ind      num         streak
    var cli = 0, cln = c[0], cls = 1;
    var w = function(v) {
        cl[cli++] = v;
    };
    for(var i = 1; i <= s; ++i){
        if (c[i] == cln && i != s) ++cls;
        else {
            if (!cln && cls > 2) {
                for(; cls > 138; cls -= 138)w(32754);
                if (cls > 2) {
                    w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);
                    cls = 0;
                }
            } else if (cls > 3) {
                w(cln), --cls;
                for(; cls > 6; cls -= 6)w(8304);
                if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;
            }
            while(cls--)w(cln);
            cls = 1;
            cln = c[i];
        }
    }
    return [
        cl.subarray(0, cli),
        s
    ];
};
// calculate the length of output from tree, code lengths
var clen = function(cf, cl) {
    var l = 0;
    for(var i = 0; i < cl.length; ++i)l += cf[i] * cl[i];
    return l;
};
// writes a fixed block
// returns the new bit pos
var wfblk = function(out, pos, dat) {
    // no need to write 00 as type: TypedArray defaults to 0
    var s = dat.length;
    var o = shft(pos + 2);
    out[o] = s & 255;
    out[o + 1] = s >>> 8;
    out[o + 2] = out[o] ^ 255;
    out[o + 3] = out[o + 1] ^ 255;
    for(var i = 0; i < s; ++i)out[o + i + 4] = dat[i];
    return (o + 4 + s) * 8;
};
// writes a block
var wblk = function(dat, out, final, syms, lf, df, eb, li, bs, bl, p) {
    wbits(out, p++, final);
    ++lf[256];
    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];
    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];
    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];
    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];
    var lcfreq = new u16(19);
    for(var i = 0; i < lclt.length; ++i)lcfreq[lclt[i] & 31]++;
    for(var i = 0; i < lcdt.length; ++i)lcfreq[lcdt[i] & 31]++;
    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];
    var nlcc = 19;
    for(; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);
    var flen = bl + 5 << 3;
    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;
    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);
    if (flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));
    var lm, ll, dm, dl;
    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;
    if (dtlen < ftlen) {
        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;
        var llm = hMap(lct, mlcb, 0);
        wbits(out, p, nlc - 257);
        wbits(out, p + 5, ndc - 1);
        wbits(out, p + 10, nlcc - 4);
        p += 14;
        for(var i = 0; i < nlcc; ++i)wbits(out, p + 3 * i, lct[clim[i]]);
        p += 3 * nlcc;
        var lcts = [
            lclt,
            lcdt
        ];
        for(var it = 0; it < 2; ++it){
            var clct = lcts[it];
            for(var i = 0; i < clct.length; ++i){
                var len = clct[i] & 31;
                wbits(out, p, llm[len]), p += lct[len];
                if (len > 15) wbits(out, p, clct[i] >>> 5 & 127), p += clct[i] >>> 12;
            }
        }
    } else {
        lm = flm, ll = flt, dm = fdm, dl = fdt;
    }
    for(var i = 0; i < li; ++i){
        if (syms[i] > 255) {
            var len = syms[i] >>> 18 & 31;
            wbits16(out, p, lm[len + 257]), p += ll[len + 257];
            if (len > 7) wbits(out, p, syms[i] >>> 23 & 31), p += fleb[len];
            var dst = syms[i] & 31;
            wbits16(out, p, dm[dst]), p += dl[dst];
            if (dst > 3) wbits16(out, p, syms[i] >>> 5 & 8191), p += fdeb[dst];
        } else {
            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];
        }
    }
    wbits16(out, p, lm[256]);
    return p + ll[256];
};
// deflate options (nice << 13) | chain
var deo = /*#__PURE__*/ new u32([
    65540,
    131080,
    131088,
    131104,
    262176,
    1048704,
    1048832,
    2114560,
    2117632
]);
// empty
var et = /*#__PURE__*/ new u8(0);
// compresses data into a raw DEFLATE buffer
var dflt = function(dat, lvl, plvl, pre, post, lst) {
    var s = dat.length;
    var o = new u8(pre + s + 5 * (1 + Math.floor(s / 7000)) + post);
    // writing to this writes to the output buffer
    var w = o.subarray(pre, o.length - post);
    var pos = 0;
    if (!lvl || s < 8) {
        for(var i = 0; i <= s; i += 65535){
            // end
            var e = i + 65535;
            if (e < s) {
                // write full block
                pos = wfblk(w, pos, dat.subarray(i, e));
            } else {
                // write final block
                w[i] = lst;
                pos = wfblk(w, pos, dat.subarray(i, s));
            }
        }
    } else {
        var opt = deo[lvl - 1];
        var n = opt >>> 13, c = opt & 8191;
        var msk_1 = (1 << plvl) - 1;
        //    prev 2-byte val map    curr 2-byte val map
        var prev = new u16(32768), head = new u16(msk_1 + 1);
        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;
        var hsh = function(i) {
            return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;
        };
        // 24576 is an arbitrary number of maximum symbols per block
        // 424 buffer for last block
        var syms = new u32(25000);
        // length/literal freq   distance freq
        var lf = new u16(288), df = new u16(32);
        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos
        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;
        for(; i < s; ++i){
            // hash value
            var hv = hsh(i);
            // index mod 32768
            var imod = i & 32767;
            // previous index with this value
            var pimod = head[hv];
            prev[imod] = pimod;
            head[hv] = imod;
            // We always should modify head and prev, but only add symbols if
            // this data is not yet processed ("wait" for wait index)
            if (wi <= i) {
                // bytes remaining
                var rem = s - i;
                if ((lc_1 > 7000 || li > 24576) && rem > 423) {
                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);
                    li = lc_1 = eb = 0, bs = i;
                    for(var j = 0; j < 286; ++j)lf[j] = 0;
                    for(var j = 0; j < 30; ++j)df[j] = 0;
                }
                //  len    dist   chain
                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;
                if (rem > 2 && hv == hsh(i - dif)) {
                    var maxn = Math.min(n, rem) - 1;
                    var maxd = Math.min(32767, i);
                    // max possible length
                    // not capped at dif because decompressors implement "rolling" index population
                    var ml = Math.min(258, rem);
                    while(dif <= maxd && --ch_1 && imod != pimod){
                        if (dat[i + l] == dat[i + l - dif]) {
                            var nl = 0;
                            for(; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);
                            if (nl > l) {
                                l = nl, d = dif;
                                // break out early when we reach "nice" (we are satisfied enough)
                                if (nl > maxn) break;
                                // now, find the rarest 2-byte sequence within this
                                // length of literals and search for that instead.
                                // Much faster than just using the start
                                var mmd = Math.min(dif, nl - 2);
                                var md = 0;
                                for(var j = 0; j < mmd; ++j){
                                    var ti = i - dif + j + 32768 & 32767;
                                    var pti = prev[ti];
                                    var cd = ti - pti + 32768 & 32767;
                                    if (cd > md) md = cd, pimod = ti;
                                }
                            }
                        }
                        // check the previous match
                        imod = pimod, pimod = prev[imod];
                        dif += imod - pimod + 32768 & 32767;
                    }
                }
                // d will be nonzero only when a match was found
                if (d) {
                    // store both dist and len data in one Uint32
                    // Make sure this is recognized as a len/dist with 28th bit (2^28)
                    syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];
                    var lin = revfl[l] & 31, din = revfd[d] & 31;
                    eb += fleb[lin] + fdeb[din];
                    ++lf[257 + lin];
                    ++df[din];
                    wi = i + l;
                    ++lc_1;
                } else {
                    syms[li++] = dat[i];
                    ++lf[dat[i]];
                }
            }
        }
        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);
        // this is the easiest way to avoid needing to maintain state
        if (!lst) pos = wfblk(w, pos, et);
    }
    return slc(o, 0, pre + shft(pos) + post);
};
// CRC32 table
var crct = /*#__PURE__*/ function() {
    var t = new u32(256);
    for(var i = 0; i < 256; ++i){
        var c = i, k = 9;
        while(--k)c = (c & 1 && 0xEDB88320) ^ c >>> 1;
        t[i] = c;
    }
    return t;
}();
// CRC32
var crc = function() {
    var c = 0xFFFFFFFF;
    return {
        p: function(d) {
            // closures have awful performance
            var cr = c;
            for(var i = 0; i < d.length; ++i)cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;
            c = cr;
        },
        d: function() {
            return c ^ 0xFFFFFFFF;
        }
    };
};
// Alder32
var adler = function() {
    var a = 1, b = 0;
    return {
        p: function(d) {
            // closures have awful performance
            var n = a, m = b;
            var l = d.length;
            for(var i = 0; i != l;){
                var e = Math.min(i + 5552, l);
                for(; i < e; ++i)n += d[i], m += n;
                n %= 65521, m %= 65521;
            }
            a = n, b = m;
        },
        d: function() {
            return (a >>> 8 << 16 | (b & 255) << 8 | b >>> 8) + ((a & 255) << 23) * 2;
        }
    };
};
;
// deflate with opts
var dopt = function(dat, opt, pre, post, st) {
    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 12 + opt.mem, pre, post, !st);
};
// Walmart object spread
var mrg = function(a, b) {
    var o = {};
    for(var k in a)o[k] = a[k];
    for(var k in b)o[k] = b[k];
    return o;
};
// worker clone
// This is possibly the craziest part of the entire codebase, despite how simple it may seem.
// The only parameter to this function is a closure that returns an array of variables outside of the function scope.
// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.
// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).
// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.
// This took me three weeks to figure out how to do.
var wcln = function(fn, fnStr, td) {
    var dt = fn();
    var st = fn.toString();
    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');
    for(var i = 0; i < dt.length; ++i){
        var v = dt[i], k = ks[i];
        if (typeof v == 'function') {
            fnStr += ';' + k + '=';
            var st_1 = v.toString();
            if (v.prototype) {
                // for global objects
                if (st_1.indexOf('[native code]') != -1) {
                    var spInd = st_1.indexOf(' ', 8) + 1;
                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));
                } else {
                    fnStr += st_1;
                    for(var t in v.prototype)fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();
                }
            } else fnStr += st_1;
        } else td[k] = v;
    }
    return [
        fnStr,
        td
    ];
};
var ch = [];
// clone bufs
var cbfs = function(v) {
    var tl = [];
    for(var k in v){
        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32) tl.push((v[k] = new v[k].constructor(v[k])).buffer);
    }
    return tl;
};
// use a worker to execute code
var wrkr = function(fns, init, id, cb) {
    var _a;
    if (!ch[id]) {
        var fnStr = '', td_1 = {}, m = fns.length - 1;
        for(var i = 0; i < m; ++i)_a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];
        ch[id] = wcln(fns[m], fnStr, td_1);
    }
    var td = mrg({}, ch[id][1]);
    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);
};
// base async inflate fn
var bInflt = function() {
    return [
        u8,
        u16,
        u32,
        fleb,
        fdeb,
        clim,
        fl,
        fd,
        flrm,
        fdrm,
        rev,
        hMap,
        max,
        bits,
        bits16,
        shft,
        slc,
        inflt,
        inflateSync,
        pbf,
        gu8
    ];
};
var bDflt = function() {
    return [
        u8,
        u16,
        u32,
        fleb,
        fdeb,
        clim,
        revfl,
        revfd,
        flm,
        flt,
        fdm,
        fdt,
        rev,
        deo,
        et,
        hMap,
        wbits,
        wbits16,
        hTree,
        ln,
        lc,
        clen,
        wfblk,
        wblk,
        shft,
        slc,
        dflt,
        dopt,
        deflateSync,
        pbf
    ];
};
// gzip extra
var gze = function() {
    return [
        gzh,
        gzhl,
        wbytes,
        crc,
        crct
    ];
};
// gunzip extra
var guze = function() {
    return [
        gzs,
        gzl
    ];
};
// zlib extra
var zle = function() {
    return [
        zlh,
        wbytes,
        adler
    ];
};
// unzlib extra
var zule = function() {
    return [
        zlv
    ];
};
// post buf
var pbf = function(msg) {
    return postMessage(msg, [
        msg.buffer
    ]);
};
// get u8
var gu8 = function(o) {
    return o && o.size && new u8(o.size);
};
// async helper
var cbify = function(dat, opts, fns, init, id, cb) {
    var w = wrkr(fns, init, id, function(err, dat) {
        w.terminate();
        cb(err, dat);
    });
    if (!opts.consume) dat = new u8(dat);
    w.postMessage([
        dat,
        opts
    ], [
        dat.buffer
    ]);
    return function() {
        w.terminate();
    };
};
// auto stream
var astrm = function(strm) {
    strm.ondata = function(dat, final) {
        return postMessage([
            dat,
            final
        ], [
            dat.buffer
        ]);
    };
    return function(ev) {
        return strm.push(ev.data[0], ev.data[1]);
    };
};
// async stream attach
var astrmify = function(fns, strm, opts, init, id) {
    var t;
    var w = wrkr(fns, init, id, function(err, dat) {
        if (err) w.terminate(), strm.ondata.call(strm, err);
        else {
            if (dat[1]) w.terminate();
            strm.ondata.call(strm, err, dat[0], dat[1]);
        }
    });
    w.postMessage(opts);
    strm.push = function(d, f) {
        if (t) throw 'stream finished';
        if (!strm.ondata) throw 'no stream handler';
        w.postMessage([
            d,
            t = f
        ], [
            d.buffer
        ]);
    };
    strm.terminate = function() {
        w.terminate();
    };
};
// read 2 bytes
var b2 = function(d, b) {
    return d[b] | d[b + 1] << 8;
};
// read 4 bytes
var b4 = function(d, b) {
    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16) + (d[b + 3] << 23) * 2;
};
// write bytes
var wbytes = function(d, b, v) {
    for(; v; ++b)d[b] = v, v >>>= 8;
};
// gzip header
var gzh = function(c, o) {
    var fn = o.filename;
    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix
    if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));
    if (fn) {
        c[3] = 8;
        for(var i = 0; i <= fn.length; ++i)c[i + 10] = fn.charCodeAt(i);
    }
};
// gzip footer: -8 to -4 = CRC, -4 to -0 is length
// gzip start
var gzs = function(d) {
    if (d[0] != 31 || d[1] != 139 || d[2] != 8) throw 'invalid gzip data';
    var flg = d[3];
    var st = 10;
    if (flg & 4) st += d[10] | (d[11] << 8) + 2;
    for(var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);
    return st + (flg & 2);
};
// gzip length
var gzl = function(d) {
    var l = d.length;
    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) + 2 * (d[l - 1] << 23);
};
// gzip header length
var gzhl = function(o) {
    return 10 + (o.filename && o.filename.length + 1 || 0);
};
// zlib header
var zlh = function(c, o) {
    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;
    c[0] = 120, c[1] = fl << 6 | (fl ? 32 - 2 * fl : 1);
};
// zlib valid
var zlv = function(d) {
    if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';
    if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';
};
function AsyncCmpStrm(opts, cb) {
    if (!cb && typeof opts == 'function') cb = opts, opts = {};
    this.ondata = cb;
    return opts;
}
// zlib footer: -4 to -0 is Adler32
/**
 * Streaming DEFLATE compression
 */ var Deflate = function() {
    function Deflate(opts, cb) {
        if (!cb && typeof opts == 'function') cb = opts, opts = {};
        this.ondata = cb;
        this.o = opts || {};
    }
    Deflate.prototype.p = function(c, f) {
        this.ondata(dopt(c, this.o, 0, 0, !f), f);
    };
    /**
     * Pushes a chunk to be deflated
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Deflate.prototype.push = function(chunk, final) {
        if (this.d) throw 'stream finished';
        if (!this.ondata) throw 'no stream handler';
        this.d = final;
        this.p(chunk, final || false);
    };
    return Deflate;
}();
;
/**
 * Asynchronous streaming DEFLATE compression
 */ var AsyncDeflate = function() {
    function AsyncDeflate(opts, cb) {
        astrmify([
            bDflt,
            function() {
                return [
                    astrm,
                    Deflate
                ];
            }
        ], this, AsyncCmpStrm.call(this, opts, cb), function(ev) {
            var strm = new Deflate(ev.data);
            onmessage = astrm(strm);
        }, 6);
    }
    return AsyncDeflate;
}();
;
function deflate(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return cbify(data, opts, [
        bDflt
    ], function(ev) {
        return pbf(deflateSync(ev.data[0], ev.data[1]));
    }, 0, cb);
}
function deflateSync(data, opts) {
    if (opts === void 0) {
        opts = {};
    }
    return dopt(data, opts, 0, 0);
}
/**
 * Streaming DEFLATE decompression
 */ var Inflate = function() {
    /**
     * Creates an inflation stream
     * @param cb The callback to call whenever data is inflated
     */ function Inflate(cb) {
        this.s = {};
        this.p = new u8(0);
        this.ondata = cb;
    }
    Inflate.prototype.e = function(c) {
        if (this.d) throw 'stream finished';
        if (!this.ondata) throw 'no stream handler';
        var l = this.p.length;
        var n = new u8(l + c.length);
        n.set(this.p), n.set(c, l), this.p = n;
    };
    Inflate.prototype.c = function(final) {
        this.d = this.s.i = final || false;
        var bts = this.s.b;
        var dt = inflt(this.p, this.o, this.s);
        this.ondata(slc(dt, bts, this.s.b), this.d);
        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;
        this.p = slc(this.p, this.s.p / 8 >> 0), this.s.p &= 7;
    };
    /**
     * Pushes a chunk to be inflated
     * @param chunk The chunk to push
     * @param final Whether this is the final chunk
     */ Inflate.prototype.push = function(chunk, final) {
        this.e(chunk), this.c(final);
    };
    return Inflate;
}();
;
/**
 * Asynchronous streaming DEFLATE decompression
 */ var AsyncInflate = function() {
    /**
     * Creates an asynchronous inflation stream
     * @param cb The callback to call whenever data is deflated
     */ function AsyncInflate(cb) {
        this.ondata = cb;
        astrmify([
            bInflt,
            function() {
                return [
                    astrm,
                    Inflate
                ];
            }
        ], this, 0, function() {
            var strm = new Inflate();
            onmessage = astrm(strm);
        }, 7);
    }
    return AsyncInflate;
}();
;
function inflate(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return cbify(data, opts, [
        bInflt
    ], function(ev) {
        return pbf(inflateSync(ev.data[0], gu8(ev.data[1])));
    }, 1, cb);
}
function inflateSync(data, out) {
    return inflt(data, out);
}
// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.
/**
 * Streaming GZIP compression
 */ var Gzip = function() {
    function Gzip(opts, cb) {
        this.c = crc();
        this.l = 0;
        this.v = 1;
        Deflate.call(this, opts, cb);
    }
    /**
     * Pushes a chunk to be GZIPped
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Gzip.prototype.push = function(chunk, final) {
        Deflate.prototype.push.call(this, chunk, final);
    };
    Gzip.prototype.p = function(c, f) {
        this.c.p(c);
        this.l += c.length;
        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);
        if (this.v) gzh(raw, this.o), this.v = 0;
        if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);
        this.ondata(raw, f);
    };
    return Gzip;
}();
;
/**
 * Asynchronous streaming GZIP compression
 */ var AsyncGzip = function() {
    function AsyncGzip(opts, cb) {
        astrmify([
            bDflt,
            gze,
            function() {
                return [
                    astrm,
                    Deflate,
                    Gzip
                ];
            }
        ], this, AsyncCmpStrm.call(this, opts, cb), function(ev) {
            var strm = new Gzip(ev.data);
            onmessage = astrm(strm);
        }, 8);
    }
    return AsyncGzip;
}();
;
function gzip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return cbify(data, opts, [
        bDflt,
        gze,
        function() {
            return [
                gzipSync
            ];
        }
    ], function(ev) {
        return pbf(gzipSync(ev.data[0], ev.data[1]));
    }, 2, cb);
}
function gzipSync(data, opts) {
    if (opts === void 0) {
        opts = {};
    }
    var c = crc(), l = data.length;
    c.p(data);
    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;
    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;
}
/**
 * Streaming GZIP decompression
 */ var Gunzip = function() {
    /**
     * Creates a GUNZIP stream
     * @param cb The callback to call whenever data is inflated
     */ function Gunzip(cb) {
        this.v = 1;
        Inflate.call(this, cb);
    }
    /**
     * Pushes a chunk to be GUNZIPped
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Gunzip.prototype.push = function(chunk, final) {
        Inflate.prototype.e.call(this, chunk);
        if (this.v) {
            var s = gzs(this.p);
            if (s >= this.p.length && !final) return;
            this.p = this.p.subarray(s), this.v = 0;
        }
        if (final) {
            if (this.p.length < 8) throw 'invalid gzip stream';
            this.p = this.p.subarray(0, -8);
        }
        // necessary to prevent TS from using the closure value
        // This allows for workerization to function correctly
        Inflate.prototype.c.call(this, final);
    };
    return Gunzip;
}();
;
/**
 * Asynchronous streaming GZIP decompression
 */ var AsyncGunzip = function() {
    /**
     * Creates an asynchronous GUNZIP stream
     * @param cb The callback to call whenever data is deflated
     */ function AsyncGunzip(cb) {
        this.ondata = cb;
        astrmify([
            bInflt,
            guze,
            function() {
                return [
                    astrm,
                    Inflate,
                    Gunzip
                ];
            }
        ], this, 0, function() {
            var strm = new Gunzip();
            onmessage = astrm(strm);
        }, 9);
    }
    return AsyncGunzip;
}();
;
function gunzip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return cbify(data, opts, [
        bInflt,
        guze,
        function() {
            return [
                gunzipSync
            ];
        }
    ], function(ev) {
        return pbf(gunzipSync(ev.data[0]));
    }, 3, cb);
}
function gunzipSync(data, out) {
    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));
}
/**
 * Streaming Zlib compression
 */ var Zlib = function() {
    function Zlib(opts, cb) {
        this.c = adler();
        this.v = 1;
        Deflate.call(this, opts, cb);
    }
    /**
     * Pushes a chunk to be zlibbed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Zlib.prototype.push = function(chunk, final) {
        Deflate.prototype.push.call(this, chunk, final);
    };
    Zlib.prototype.p = function(c, f) {
        this.c.p(c);
        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);
        if (this.v) zlh(raw, this.o), this.v = 0;
        if (f) wbytes(raw, raw.length - 4, this.c.d());
        this.ondata(raw, f);
    };
    return Zlib;
}();
;
/**
 * Asynchronous streaming Zlib compression
 */ var AsyncZlib = function() {
    function AsyncZlib(opts, cb) {
        astrmify([
            bDflt,
            zle,
            function() {
                return [
                    astrm,
                    Deflate,
                    Zlib
                ];
            }
        ], this, AsyncCmpStrm.call(this, opts, cb), function(ev) {
            var strm = new Zlib(ev.data);
            onmessage = astrm(strm);
        }, 10);
    }
    return AsyncZlib;
}();
;
function zlib(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return cbify(data, opts, [
        bDflt,
        zle,
        function() {
            return [
                zlibSync
            ];
        }
    ], function(ev) {
        return pbf(zlibSync(ev.data[0], ev.data[1]));
    }, 4, cb);
}
function zlibSync(data, opts) {
    if (opts === void 0) {
        opts = {};
    }
    var a = adler();
    a.p(data);
    var d = dopt(data, opts, 2, 4);
    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;
}
/**
 * Streaming Zlib decompression
 */ var Unzlib = function() {
    /**
     * Creates a Zlib decompression stream
     * @param cb The callback to call whenever data is inflated
     */ function Unzlib(cb) {
        this.v = 1;
        Inflate.call(this, cb);
    }
    /**
     * Pushes a chunk to be unzlibbed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Unzlib.prototype.push = function(chunk, final) {
        Inflate.prototype.e.call(this, chunk);
        if (this.v) {
            if (this.p.length < 2 && !final) return;
            this.p = this.p.subarray(2), this.v = 0;
        }
        if (final) {
            if (this.p.length < 4) throw 'invalid zlib stream';
            this.p = this.p.subarray(0, -4);
        }
        // necessary to prevent TS from using the closure value
        // This allows for workerization to function correctly
        Inflate.prototype.c.call(this, final);
    };
    return Unzlib;
}();
;
/**
 * Asynchronous streaming Zlib decompression
 */ var AsyncUnzlib = function() {
    /**
     * Creates an asynchronous Zlib decompression stream
     * @param cb The callback to call whenever data is deflated
     */ function AsyncUnzlib(cb) {
        this.ondata = cb;
        astrmify([
            bInflt,
            zule,
            function() {
                return [
                    astrm,
                    Inflate,
                    Unzlib
                ];
            }
        ], this, 0, function() {
            var strm = new Unzlib();
            onmessage = astrm(strm);
        }, 11);
    }
    return AsyncUnzlib;
}();
;
function unzlib(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return cbify(data, opts, [
        bInflt,
        zule,
        function() {
            return [
                unzlibSync
            ];
        }
    ], function(ev) {
        return pbf(unzlibSync(ev.data[0], gu8(ev.data[1])));
    }, 5, cb);
}
function unzlibSync(data, out) {
    return inflt((zlv(data), data.subarray(2, -4)), out);
}
;
;
/**
 * Streaming GZIP, Zlib, or raw DEFLATE decompression
 */ var Decompress = function() {
    /**
     * Creates a decompression stream
     * @param cb The callback to call whenever data is decompressed
     */ function Decompress(cb) {
        this.G = Gunzip;
        this.I = Inflate;
        this.Z = Unzlib;
        this.ondata = cb;
    }
    /**
     * Pushes a chunk to be decompressed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Decompress.prototype.push = function(chunk, final) {
        if (!this.ondata) throw 'no stream handler';
        if (!this.s) {
            if (this.p && this.p.length) {
                var n = new u8(this.p.length + chunk.length);
                n.set(this.p), n.set(chunk, this.p.length);
            } else this.p = chunk;
            if (this.p.length > 2) {
                var _this_1 = this;
                var cb = function() {
                    _this_1.ondata.apply(_this_1, arguments);
                };
                this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(cb) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(cb) : new this.Z(cb);
                this.s.push(this.p, final);
                this.p = null;
            }
        } else this.s.push(chunk, final);
    };
    return Decompress;
}();
;
/**
 * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression
 */ var AsyncDecompress = function() {
    /**
   * Creates an asynchronous decompression stream
   * @param cb The callback to call whenever data is decompressed
   */ function AsyncDecompress(cb) {
        this.G = AsyncGunzip;
        this.I = AsyncInflate;
        this.Z = AsyncUnzlib;
        this.ondata = cb;
    }
    /**
     * Pushes a chunk to be decompressed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ AsyncDecompress.prototype.push = function(chunk, final) {
        Decompress.prototype.push.call(this, chunk, final);
    };
    return AsyncDecompress;
}();
;
function decompress(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);
}
function decompressSync(data, out) {
    return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, out) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, out) : unzlibSync(data, out);
}
// flatten a directory structure
var fltn = function(d, p, t, o) {
    for(var k in d){
        var val = d[k], n = p + k;
        if (val instanceof u8) t[n] = [
            val,
            o
        ];
        else if (Array.isArray(val)) t[n] = [
            val[0],
            mrg(o, val[1])
        ];
        else fltn(val, n + '/', t, o);
    }
};
function strToU8(str, latin1) {
    var l = str.length;
    if (!latin1 && typeof TextEncoder != 'undefined') return new TextEncoder().encode(str);
    var ar = new u8(str.length + (str.length >>> 1));
    var ai = 0;
    var w = function(v) {
        ar[ai++] = v;
    };
    for(var i = 0; i < l; ++i){
        if (ai + 5 > ar.length) {
            var n = new u8(ai + 8 + (l - i << 1));
            n.set(ar);
            ar = n;
        }
        var c = str.charCodeAt(i);
        if (c < 128 || latin1) w(c);
        else if (c < 2048) w(192 | c >>> 6), w(128 | c & 63);
        else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >>> 18), w(128 | c >>> 12 & 63), w(128 | c >>> 6 & 63), w(128 | c & 63);
        else w(224 | c >>> 12), w(128 | c >>> 6 & 63), w(128 | c & 63);
    }
    return slc(ar, 0, ai);
}
function strFromU8(dat, latin1) {
    var r = '';
    if (!latin1 && typeof TextDecoder != 'undefined') return new TextDecoder().decode(dat);
    for(var i = 0; i < dat.length;){
        var c = dat[i++];
        if (c < 128 || latin1) r += String.fromCharCode(c);
        else if (c < 224) r += String.fromCharCode((c & 31) << 6 | dat[i++] & 63);
        else if (c < 240) r += String.fromCharCode((c & 15) << 12 | (dat[i++] & 63) << 6 | dat[i++] & 63);
        else c = ((c & 15) << 18 | (dat[i++] & 63) << 12 | (dat[i++] & 63) << 6 | dat[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);
    }
    return r;
}
;
// skip local zip header
var slzh = function(d, b) {
    return b + 30 + b2(d, b + 26) + b2(d, b + 28);
};
// read zip header
var zh = function(d, b, z) {
    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl;
    var _a = z ? z64e(d, es) : [
        b4(d, b + 20),
        b4(d, b + 24),
        b4(d, b + 42)
    ], sc = _a[0], su = _a[1], off = _a[2];
    return [
        b2(d, b + 10),
        sc,
        su,
        fn,
        es + b2(d, b + 30) + b2(d, b + 32),
        off
    ];
};
// read zip64 extra field
var z64e = function(d, b) {
    for(; b2(d, b) != 1; b += 4 + b2(d, b + 2));
    return [
        b4(d, b + 12),
        b4(d, b + 4),
        b4(d, b + 20)
    ];
};
// write zip header
var wzh = function(d, b, c, cmp, su, fn, u, o, ce, t) {
    var fl = fn.length, l = cmp.length;
    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;
    if (ce != null) d[b] = 20, b += 2;
    d[b] = 20, b += 2; // spec compliance? what's that?
    d[b++] = t == 8 && (o.level == 1 ? 6 : o.level < 6 ? 4 : o.level == 9 ? 2 : 0), d[b++] = u && 8;
    d[b] = t, b += 2;
    var dt = new Date(o.mtime || Date.now()), y = dt.getFullYear() - 1980;
    if (y < 0 || y > 119) throw 'date not in range 1980-2099';
    wbytes(d, b, (y << 24) * 2 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >>> 1);
    b += 4;
    wbytes(d, b, c);
    wbytes(d, b + 4, l);
    wbytes(d, b + 8, su);
    wbytes(d, b + 12, fl), b += 16; // skip extra field, comment
    if (ce != null) wbytes(d, b += 10, ce), b += 4;
    d.set(fn, b);
    b += fl;
    if (ce == null) d.set(cmp, b);
};
// write zip footer (end of central directory)
var wzf = function(o, b, c, d, e) {
    wbytes(o, b, 0x6054B50); // skip disk
    wbytes(o, b + 8, c);
    wbytes(o, b + 10, c);
    wbytes(o, b + 12, d);
    wbytes(o, b + 16, e);
};
function zip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') throw 'no callback';
    var r = {};
    fltn(data, '', r, opts);
    var k = Object.keys(r);
    var lft = k.length, o = 0, tot = 0;
    var slft = lft, files = new Array(lft);
    var term = [];
    var tAll = function() {
        for(var i = 0; i < term.length; ++i)term[i]();
    };
    var cbf = function() {
        var out = new u8(tot + 22), oe = o, cdl = tot - o;
        tot = 0;
        for(var i = 0; i < slft; ++i){
            var f = files[i];
            try {
                wzh(out, tot, f.c, f.d, f.m, f.n, f.u, f.p, null, f.t);
                wzh(out, o, f.c, f.d, f.m, f.n, f.u, f.p, tot, f.t), o += 46 + f.n.length, tot += 30 + f.n.length + f.d.length;
            } catch (e) {
                return cb(e, null);
            }
        }
        wzf(out, o, files.length, cdl, oe);
        cb(null, out);
    };
    if (!lft) cbf();
    var _loop_1 = function(i) {
        var fn = k[i];
        var _a = r[fn], file = _a[0], p = _a[1];
        var c = crc(), m = file.length;
        c.p(file);
        var n = strToU8(fn), s = n.length;
        var t = p.level == 0 ? 0 : 8;
        var cbl = function(e, d) {
            if (e) {
                tAll();
                cb(e, null);
            } else {
                var l = d.length;
                files[i] = {
                    t: t,
                    d: d,
                    m: m,
                    c: c.d(),
                    u: fn.length != l,
                    n: n,
                    p: p
                };
                o += 30 + s + l;
                tot += 76 + 2 * s + l;
                if (!--lft) cbf();
            }
        };
        if (n.length > 65535) cbl('filename too long', null);
        if (!t) cbl(null, file);
        else if (m < 160000) {
            try {
                cbl(null, deflateSync(file, p));
            } catch (e) {
                cbl(e, null);
            }
        } else term.push(deflate(file, p, cbl));
    };
    // Cannot use lft because it can decrease
    for(var i = 0; i < slft; ++i){
        _loop_1(i);
    }
    return tAll;
}
function zipSync(data, opts) {
    if (opts === void 0) {
        opts = {};
    }
    var r = {};
    var files = [];
    fltn(data, '', r, opts);
    var o = 0;
    var tot = 0;
    for(var fn in r){
        var _a = r[fn], file = _a[0], p = _a[1];
        var t = p.level == 0 ? 0 : 8;
        var n = strToU8(fn), s = n.length;
        if (n.length > 65535) throw 'filename too long';
        var d = t ? deflateSync(file, p) : file, l = d.length;
        var c = crc();
        c.p(file);
        files.push({
            t: t,
            d: d,
            m: file.length,
            c: c.d(),
            u: fn.length != s,
            n: n,
            o: o,
            p: p
        });
        o += 30 + s + l;
        tot += 76 + 2 * s + l;
    }
    var out = new u8(tot + 22), oe = o, cdl = tot - o;
    for(var i = 0; i < files.length; ++i){
        var f = files[i];
        wzh(out, f.o, f.c, f.d, f.m, f.n, f.u, f.p, null, f.t);
        wzh(out, o, f.c, f.d, f.m, f.n, f.u, f.p, f.o, f.t), o += 46 + f.n.length;
    }
    wzf(out, o, files.length, cdl, oe);
    return out;
}
function unzip(data, cb) {
    if (typeof cb != 'function') throw 'no callback';
    var term = [];
    var tAll = function() {
        for(var i = 0; i < term.length; ++i)term[i]();
    };
    var files = {};
    var e = data.length - 22;
    for(; b4(data, e) != 0x6054B50; --e){
        if (!e || data.length - e > 65558) {
            cb('invalid zip file', null);
            return;
        }
    }
    ;
    var lft = b2(data, e + 8);
    if (!lft) cb(null, {});
    var c = lft;
    var o = b4(data, e + 16);
    var z = o == 4294967295;
    if (z) {
        e = b4(data, e - 12);
        if (b4(data, e) != 0x6064B50) throw 'invalid zip file';
        c = lft = b4(data, e + 32);
        o = b4(data, e + 48);
    }
    var _loop_2 = function(i) {
        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);
        o = no;
        var cbl = function(e, d) {
            if (e) {
                tAll();
                cb(e, null);
            } else {
                files[fn] = d;
                if (!--lft) cb(null, files);
            }
        };
        if (!c_1) cbl(null, slc(data, b, b + sc));
        else if (c_1 == 8) {
            var infl = data.subarray(b, b + sc);
            if (sc < 320000) {
                try {
                    cbl(null, inflateSync(infl, new u8(su)));
                } catch (e) {
                    cbl(e, null);
                }
            } else term.push(inflate(infl, {
                size: su
            }, cbl));
        } else cbl('unknown compression type ' + c_1, null);
    };
    for(var i = 0; i < c; ++i){
        _loop_2(i);
    }
    return tAll;
}
function unzipSync(data) {
    var files = {};
    var e = data.length - 22;
    for(; b4(data, e) != 0x6054B50; --e){
        if (!e || data.length - e > 65558) throw 'invalid zip file';
    }
    ;
    var c = b2(data, e + 8);
    if (!c) return {};
    var o = b4(data, e + 16);
    var z = o == 4294967295;
    if (z) {
        e = b4(data, e - 12);
        if (b4(data, e) != 0x6064B50) throw 'invalid zip file';
        c = b4(data, e + 32);
        o = b4(data, e + 48);
    }
    for(var i = 0; i < c; ++i){
        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);
        o = no;
        if (!c_2) files[fn] = slc(data, b, b + sc);
        else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));
        else throw 'unknown compression type ' + c_2;
    }
    return files;
}
}}),
"[project]/node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
/*!
 * 
 *               jsPDF AutoTable plugin v3.5.23
 *
 *               Copyright (c) 2021 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable
 *               Licensed under the MIT License.
 *               http://opensource.org/licenses/mit-license
 *
 */ !function(t, e) {
    if ("TURBOPACK compile-time truthy", 1) module.exports = e(function() {
        try {
            return __turbopack_context__.r("[project]/node_modules/jspdf/dist/jspdf.es.min.js [app-client] (ecmascript)");
        } catch (t) {}
    }());
    else {
        "TURBOPACK unreachable";
        var n;
        var o;
    }
}(void 0 !== this ? this : window, function(t) {
    return (()=>{
        "use strict";
        var e = {
            662: function(t, e) {
                var n, o = this && this.__extends || (n = function(t, e) {
                    return (n = Object.setPrototypeOf || ({
                        __proto__: []
                    }) instanceof Array && function(t, e) {
                        t.__proto__ = e;
                    } || function(t, e) {
                        for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    })(t, e);
                }, function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
                    function o() {
                        this.constructor = t;
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype, new o);
                });
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.CellHookData = e.HookData = void 0;
                var r = function(t, e, n) {
                    this.table = e, this.pageNumber = e.pageNumber, this.pageCount = this.pageNumber, this.settings = e.settings, this.cursor = n, this.doc = t.getDocument();
                };
                e.HookData = r;
                var i = function(t) {
                    function e(e, n, o, r, i, l) {
                        var a = t.call(this, e, n, l) || this;
                        return a.cell = o, a.row = r, a.column = i, a.section = r.section, a;
                    }
                    return o(e, t), e;
                }(r);
                e.CellHookData = i;
            },
            790: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var o = n(148), r = n(938), i = n(323), l = n(587), a = n(49), s = n(858);
                e.default = function(t) {
                    t.API.autoTable = function() {
                        for(var t, e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n];
                        1 === e.length ? t = e[0] : (console.error("Use of deprecated autoTable initiation"), (t = e[2] || {}).columns = e[0], t.body = e[1]);
                        var o = (0, l.parseInput)(this, t), r = (0, s.createTable)(this, o);
                        return (0, a.drawTable)(this, r), this;
                    }, t.API.lastAutoTable = !1, t.API.previousAutoTable = !1, t.API.autoTable.previous = !1, t.API.autoTableText = function(t, e, n, o) {
                        (0, r.default)(t, e, n, o, this);
                    }, t.API.autoTableSetDefaults = function(t) {
                        return i.DocHandler.setDefaults(t, this), this;
                    }, t.autoTableSetDefaults = function(t, e) {
                        i.DocHandler.setDefaults(t, e);
                    }, t.API.autoTableHtmlToJson = function(t, e) {
                        if (void 0 === e && (e = !1), "undefined" == typeof window) return console.error("Cannot run autoTableHtmlToJson in non browser environment"), null;
                        var n = new i.DocHandler(this), r = (0, o.parseHtml)(n, t, window, e, !1), l = r.head, a = r.body;
                        return {
                            columns: l[0].map(function(t) {
                                return t.content;
                            }),
                            rows: a,
                            data: a
                        };
                    }, t.API.autoTableEndPosY = function() {
                        console.error("Use of deprecated function: autoTableEndPosY. Use doc.lastAutoTable.finalY instead.");
                        var t = this.lastAutoTable;
                        return t && t.finalY ? t.finalY : 0;
                    }, t.API.autoTableAddPageContent = function(e) {
                        return console.error("Use of deprecated function: autoTableAddPageContent. Use jsPDF.autoTableSetDefaults({didDrawPage: () => {}}) instead."), t.API.autoTable.globalDefaults || (t.API.autoTable.globalDefaults = {}), t.API.autoTable.globalDefaults.addPageContent = e, this;
                    }, t.API.autoTableAddPage = function() {
                        return console.error("Use of deprecated function: autoTableAddPage. Use doc.addPage()"), this.addPage(), this;
                    };
                };
            },
            938: (t, e)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t, e, n, o, r) {
                    o = o || {};
                    var i = 1.15, l = r.internal.scaleFactor, a = r.internal.getFontSize() / l, s = "", u = 1;
                    if ("middle" !== o.valign && "bottom" !== o.valign && "center" !== o.halign && "right" !== o.halign || (u = (s = "string" == typeof t ? t.split(/\r\n|\r|\n/g) : t).length || 1), n += a * (2 - i), "middle" === o.valign ? n -= u / 2 * a * i : "bottom" === o.valign && (n -= u * a * i), "center" === o.halign || "right" === o.halign) {
                        var d = a;
                        if ("center" === o.halign && (d *= .5), s && u >= 1) {
                            for(var h = 0; h < s.length; h++)r.text(s[h], e - r.getStringUnitWidth(s[h]) * d, n), n += a * i;
                            return r;
                        }
                        e -= r.getStringUnitWidth(t) * d;
                    }
                    return "justify" === o.halign ? r.text(t, e, n, {
                        maxWidth: o.maxWidth || 100,
                        align: "justify"
                    }) : r.text(t, e, n), r;
                };
            },
            200: (t, e)=>{
                function n(t, e) {
                    var n = t > 0, o = e || 0 === e;
                    return n && o ? "DF" : n ? "S" : o ? "F" : null;
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.parseSpacing = e.getFillStyle = e.addTableBorder = e.getStringWidth = void 0, e.getStringWidth = function(t, e, n) {
                    return n.applyStyles(e, !0), (Array.isArray(t) ? t : [
                        t
                    ]).map(function(t) {
                        return n.getTextWidth(t);
                    }).reduce(function(t, e) {
                        return Math.max(t, e);
                    }, 0);
                }, e.addTableBorder = function(t, e, o, r) {
                    var i = e.settings.tableLineWidth, l = e.settings.tableLineColor;
                    t.applyStyles({
                        lineWidth: i,
                        lineColor: l
                    });
                    var a = n(i, !1);
                    a && t.rect(o.x, o.y, e.getWidth(t.pageSize().width), r.y - o.y, a);
                }, e.getFillStyle = n, e.parseSpacing = function(t, e) {
                    var n, o, r, i;
                    if (t = t || e, Array.isArray(t)) {
                        if (t.length >= 4) return {
                            top: t[0],
                            right: t[1],
                            bottom: t[2],
                            left: t[3]
                        };
                        if (3 === t.length) return {
                            top: t[0],
                            right: t[1],
                            bottom: t[2],
                            left: t[1]
                        };
                        if (2 === t.length) return {
                            top: t[0],
                            right: t[1],
                            bottom: t[0],
                            left: t[1]
                        };
                        t = 1 === t.length ? t[0] : e;
                    }
                    return "object" == typeof t ? ("number" == typeof t.vertical && (t.top = t.vertical, t.bottom = t.vertical), "number" == typeof t.horizontal && (t.right = t.horizontal, t.left = t.horizontal), {
                        left: null !== (n = t.left) && void 0 !== n ? n : e,
                        top: null !== (o = t.top) && void 0 !== o ? o : e,
                        right: null !== (r = t.right) && void 0 !== r ? r : e,
                        bottom: null !== (i = t.bottom) && void 0 !== i ? i : e
                    }) : ("number" != typeof t && (t = e), {
                        top: t,
                        right: t,
                        bottom: t,
                        left: t
                    });
                };
            },
            913: function(t, e) {
                var n, o = this && this.__extends || (n = function(t, e) {
                    return (n = Object.setPrototypeOf || ({
                        __proto__: []
                    }) instanceof Array && function(t, e) {
                        t.__proto__ = e;
                    } || function(t, e) {
                        for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    })(t, e);
                }, function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
                    function o() {
                        this.constructor = t;
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype, new o);
                });
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.getTheme = e.defaultStyles = e.HtmlRowInput = e.FONT_ROW_RATIO = void 0, e.FONT_ROW_RATIO = 1.15;
                var r = function(t) {
                    function e(e) {
                        var n = t.call(this) || this;
                        return n._element = e, n;
                    }
                    return o(e, t), e;
                }(Array);
                e.HtmlRowInput = r, e.defaultStyles = function(t) {
                    return {
                        font: "helvetica",
                        fontStyle: "normal",
                        overflow: "linebreak",
                        fillColor: !1,
                        textColor: 20,
                        halign: "left",
                        valign: "top",
                        fontSize: 10,
                        cellPadding: 5 / t,
                        lineColor: 200,
                        lineWidth: 0,
                        cellWidth: "auto",
                        minCellHeight: 0,
                        minCellWidth: 0
                    };
                }, e.getTheme = function(t) {
                    return ({
                        striped: {
                            table: {
                                fillColor: 255,
                                textColor: 80,
                                fontStyle: "normal"
                            },
                            head: {
                                textColor: 255,
                                fillColor: [
                                    41,
                                    128,
                                    185
                                ],
                                fontStyle: "bold"
                            },
                            body: {},
                            foot: {
                                textColor: 255,
                                fillColor: [
                                    41,
                                    128,
                                    185
                                ],
                                fontStyle: "bold"
                            },
                            alternateRow: {
                                fillColor: 245
                            }
                        },
                        grid: {
                            table: {
                                fillColor: 255,
                                textColor: 80,
                                fontStyle: "normal",
                                lineWidth: .1
                            },
                            head: {
                                textColor: 255,
                                fillColor: [
                                    26,
                                    188,
                                    156
                                ],
                                fontStyle: "bold",
                                lineWidth: 0
                            },
                            body: {},
                            foot: {
                                textColor: 255,
                                fillColor: [
                                    26,
                                    188,
                                    156
                                ],
                                fontStyle: "bold",
                                lineWidth: 0
                            },
                            alternateRow: {}
                        },
                        plain: {
                            head: {
                                fontStyle: "bold"
                            },
                            foot: {
                                fontStyle: "bold"
                            }
                        }
                    })[t];
                };
            },
            259: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.parseCss = void 0;
                var o = n(200);
                function r(t, e) {
                    var n = i(t, e);
                    if (!n) return null;
                    var o = n.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d*\.?\d*))?\)$/);
                    if (!o || !Array.isArray(o)) return null;
                    var r = [
                        parseInt(o[1]),
                        parseInt(o[2]),
                        parseInt(o[3])
                    ];
                    return 0 === parseInt(o[4]) || isNaN(r[0]) || isNaN(r[1]) || isNaN(r[2]) ? null : r;
                }
                function i(t, e) {
                    var n = e(t);
                    return "rgba(0, 0, 0, 0)" === n || "transparent" === n || "initial" === n || "inherit" === n ? null == t.parentElement ? null : i(t.parentElement, e) : n;
                }
                e.parseCss = function(t, e, n, i, l) {
                    var a = {}, s = 96 / 72, u = r(e, function(t) {
                        return l.getComputedStyle(t).backgroundColor;
                    });
                    null != u && (a.fillColor = u);
                    var d = r(e, function(t) {
                        return l.getComputedStyle(t).color;
                    });
                    null != d && (a.textColor = d);
                    var h = r(e, function(t) {
                        return l.getComputedStyle(t).borderTopColor;
                    });
                    null != h && (a.lineColor = h);
                    var c = function(t, e) {
                        var n = [
                            t.paddingTop,
                            t.paddingRight,
                            t.paddingBottom,
                            t.paddingLeft
                        ], r = 96 / (72 / e), i = (parseInt(t.lineHeight) - parseInt(t.fontSize)) / e / 2, l = n.map(function(t) {
                            return parseInt(t || "0") / r;
                        }), a = (0, o.parseSpacing)(l, 0);
                        i > a.top && (a.top = i);
                        i > a.bottom && (a.bottom = i);
                        return a;
                    }(i, n);
                    c && (a.cellPadding = c);
                    var f = parseInt(i.borderTopWidth || "");
                    (f = f / s / n) && (a.lineWidth = f);
                    var p = [
                        "left",
                        "right",
                        "center",
                        "justify"
                    ];
                    -1 !== p.indexOf(i.textAlign) && (a.halign = i.textAlign), -1 !== (p = [
                        "middle",
                        "bottom",
                        "top"
                    ]).indexOf(i.verticalAlign) && (a.valign = i.verticalAlign);
                    var g = parseInt(i.fontSize || "");
                    isNaN(g) || (a.fontSize = g / s);
                    var y = function(t) {
                        var e = "";
                        ("bold" === t.fontWeight || "bolder" === t.fontWeight || parseInt(t.fontWeight) >= 700) && (e = "bold");
                        "italic" !== t.fontStyle && "oblique" !== t.fontStyle || (e += "italic");
                        return e;
                    }(i);
                    y && (a.fontStyle = y);
                    var v = (i.fontFamily || "").toLowerCase();
                    return -1 !== t.indexOf(v) && (a.font = v), a;
                };
            },
            323: (t, e)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.DocHandler = void 0;
                var n = {}, o = function() {
                    function t(t) {
                        this.jsPDFDocument = t, this.userStyles = {
                            textColor: t.getTextColor ? this.jsPDFDocument.getTextColor() : 0,
                            fontSize: t.internal.getFontSize(),
                            fontStyle: t.internal.getFont().fontStyle,
                            font: t.internal.getFont().fontName
                        };
                    }
                    return t.setDefaults = function(t, e) {
                        void 0 === e && (e = null), e ? e.__autoTableDocumentDefaults = t : n = t;
                    }, t.unifyColor = function(t) {
                        return Array.isArray(t) ? t : "number" == typeof t ? [
                            t,
                            t,
                            t
                        ] : "string" == typeof t ? [
                            t
                        ] : null;
                    }, t.prototype.applyStyles = function(e, n) {
                        var o, r, i;
                        void 0 === n && (n = !1), e.fontStyle && this.jsPDFDocument.setFontStyle && this.jsPDFDocument.setFontStyle(e.fontStyle);
                        var l = this.jsPDFDocument.internal.getFont(), a = l.fontStyle, s = l.fontName;
                        if (e.font && (s = e.font), e.fontStyle) {
                            a = e.fontStyle;
                            var u = this.getFontList()[s];
                            u && -1 === u.indexOf(a) && (this.jsPDFDocument.setFontStyle && this.jsPDFDocument.setFontStyle(u[0]), a = u[0]);
                        }
                        if (this.jsPDFDocument.setFont(s, a), e.fontSize && this.jsPDFDocument.setFontSize(e.fontSize), !n) {
                            var d = t.unifyColor(e.fillColor);
                            d && (o = this.jsPDFDocument).setFillColor.apply(o, d), (d = t.unifyColor(e.textColor)) && (r = this.jsPDFDocument).setTextColor.apply(r, d), (d = t.unifyColor(e.lineColor)) && (i = this.jsPDFDocument).setDrawColor.apply(i, d), "number" == typeof e.lineWidth && this.jsPDFDocument.setLineWidth(e.lineWidth);
                        }
                    }, t.prototype.splitTextToSize = function(t, e, n) {
                        return this.jsPDFDocument.splitTextToSize(t, e, n);
                    }, t.prototype.rect = function(t, e, n, o, r) {
                        return this.jsPDFDocument.rect(t, e, n, o, r);
                    }, t.prototype.getLastAutoTable = function() {
                        return this.jsPDFDocument.lastAutoTable || null;
                    }, t.prototype.getTextWidth = function(t) {
                        return this.jsPDFDocument.getTextWidth(t);
                    }, t.prototype.getDocument = function() {
                        return this.jsPDFDocument;
                    }, t.prototype.setPage = function(t) {
                        this.jsPDFDocument.setPage(t);
                    }, t.prototype.addPage = function() {
                        return this.jsPDFDocument.addPage();
                    }, t.prototype.getFontList = function() {
                        return this.jsPDFDocument.getFontList();
                    }, t.prototype.getGlobalOptions = function() {
                        return n || {};
                    }, t.prototype.getDocumentOptions = function() {
                        return this.jsPDFDocument.__autoTableDocumentDefaults || {};
                    }, t.prototype.pageSize = function() {
                        var t = this.jsPDFDocument.internal.pageSize;
                        return null == t.width && (t = {
                            width: t.getWidth(),
                            height: t.getHeight()
                        }), t;
                    }, t.prototype.scaleFactor = function() {
                        return this.jsPDFDocument.internal.scaleFactor;
                    }, t.prototype.pageNumber = function() {
                        var t = this.jsPDFDocument.internal.getCurrentPageInfo();
                        return t ? t.pageNumber : this.jsPDFDocument.internal.getNumberOfPages();
                    }, t;
                }();
                e.DocHandler = o;
            },
            148: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.parseHtml = void 0;
                var o = n(259), r = n(913);
                function i(t, e, n, i, a, s) {
                    for(var u = new r.HtmlRowInput(i), d = 0; d < i.cells.length; d++){
                        var h = i.cells[d], c = n.getComputedStyle(h);
                        if (a || "none" !== c.display) {
                            var f = void 0;
                            s && (f = (0, o.parseCss)(t, h, e, c, n)), u.push({
                                rowSpan: h.rowSpan,
                                colSpan: h.colSpan,
                                styles: f,
                                _element: h,
                                content: l(h)
                            });
                        }
                    }
                    var p = n.getComputedStyle(i);
                    if (u.length > 0 && (a || "none" !== p.display)) return u;
                }
                function l(t) {
                    var e = t.cloneNode(!0);
                    return e.innerHTML = e.innerHTML.replace(/\n/g, "").replace(/ +/g, " "), e.innerHTML = e.innerHTML.split(/\<br.*?\>/).map(function(t) {
                        return t.trim();
                    }).join("\n"), e.innerText || e.textContent || "";
                }
                e.parseHtml = function(t, e, n, o, r) {
                    var l, a, s;
                    void 0 === o && (o = !1), void 0 === r && (r = !1), s = "string" == typeof e ? n.document.querySelector(e) : e;
                    var u = Object.keys(t.getFontList()), d = t.scaleFactor(), h = [], c = [], f = [];
                    if (!s) return console.error("Html table could not be found with input: ", e), {
                        head: h,
                        body: c,
                        foot: f
                    };
                    for(var p = 0; p < s.rows.length; p++){
                        var g = s.rows[p], y = null === (a = null === (l = null == g ? void 0 : g.parentElement) || void 0 === l ? void 0 : l.tagName) || void 0 === a ? void 0 : a.toLowerCase(), v = i(u, d, n, g, o, r);
                        v && ("thead" === y ? h.push(v) : "tfoot" === y ? f.push(v) : c.push(v));
                    }
                    return {
                        head: h,
                        body: c,
                        foot: f
                    };
                };
            },
            587: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.parseInput = void 0;
                var o = n(148), r = n(360), i = n(200), l = n(323), a = n(291);
                function s(t, e, n) {
                    var o = t[0] || e[0] || n[0] || [], r = [];
                    return Object.keys(o).filter(function(t) {
                        return "_element" !== t;
                    }).forEach(function(t) {
                        var e, n = 1;
                        "object" != typeof (e = Array.isArray(o) ? o[parseInt(t)] : o[t]) || Array.isArray(e) || (n = (null == e ? void 0 : e.colSpan) || 1);
                        for(var i = 0; i < n; i++){
                            var l = {
                                dataKey: Array.isArray(o) ? r.length : t + (i > 0 ? "_" + i : "")
                            };
                            r.push(l);
                        }
                    }), r;
                }
                e.parseInput = function(t, e) {
                    var n = new l.DocHandler(t), u = n.getDocumentOptions(), d = n.getGlobalOptions();
                    (0, a.default)(n, d, u, e);
                    var h, c = (0, r.assign)({}, d, u, e);
                    "undefined" != typeof window && (h = window);
                    var f = function(t, e, n) {
                        for(var o = {
                            styles: {},
                            headStyles: {},
                            bodyStyles: {},
                            footStyles: {},
                            alternateRowStyles: {},
                            columnStyles: {}
                        }, i = function(i) {
                            if ("columnStyles" === i) {
                                var l = t[i], a = e[i], s = n[i];
                                o.columnStyles = (0, r.assign)({}, l, a, s);
                            } else {
                                var u = [
                                    t,
                                    e,
                                    n
                                ].map(function(t) {
                                    return t[i] || {};
                                });
                                o[i] = (0, r.assign)({}, u[0], u[1], u[2]);
                            }
                        }, l = 0, a = Object.keys(o); l < a.length; l++){
                            i(a[l]);
                        }
                        return o;
                    }(d, u, e), p = function(t, e, n) {
                        for(var o = {
                            didParseCell: [],
                            willDrawCell: [],
                            didDrawCell: [],
                            didDrawPage: []
                        }, r = 0, i = [
                            t,
                            e,
                            n
                        ]; r < i.length; r++){
                            var l = i[r];
                            l.didParseCell && o.didParseCell.push(l.didParseCell), l.willDrawCell && o.willDrawCell.push(l.willDrawCell), l.didDrawCell && o.didDrawCell.push(l.didDrawCell), l.didDrawPage && o.didDrawPage.push(l.didDrawPage);
                        }
                        return o;
                    }(d, u, e), g = function(t, e) {
                        var n, o, r, l, a, s, u, d, h, c, f, p, g, y = (0, i.parseSpacing)(e.margin, 40 / t.scaleFactor()), v = null !== (n = function(t, e) {
                            var n = t.getLastAutoTable(), o = t.scaleFactor(), r = t.pageNumber(), i = !1;
                            if (n && n.startPageNumber) {
                                i = n.startPageNumber + n.pageNumber - 1 === r;
                            }
                            if ("number" == typeof e) return e;
                            if ((null == e || !1 === e) && i && null != (null == n ? void 0 : n.finalY)) return n.finalY + 20 / o;
                            return null;
                        }(t, e.startY)) && void 0 !== n ? n : y.top;
                        p = !0 === e.showFoot ? "everyPage" : !1 === e.showFoot ? "never" : null !== (o = e.showFoot) && void 0 !== o ? o : "everyPage";
                        g = !0 === e.showHead ? "everyPage" : !1 === e.showHead ? "never" : null !== (r = e.showHead) && void 0 !== r ? r : "everyPage";
                        var m = null !== (l = e.useCss) && void 0 !== l && l, b = e.theme || (m ? "plain" : "striped"), w = !!e.horizontalPageBreak, S = null !== (a = e.horizontalPageBreakRepeat) && void 0 !== a ? a : null;
                        return {
                            includeHiddenHtml: null !== (s = e.includeHiddenHtml) && void 0 !== s && s,
                            useCss: m,
                            theme: b,
                            startY: v,
                            margin: y,
                            pageBreak: null !== (u = e.pageBreak) && void 0 !== u ? u : "auto",
                            rowPageBreak: null !== (d = e.rowPageBreak) && void 0 !== d ? d : "auto",
                            tableWidth: null !== (h = e.tableWidth) && void 0 !== h ? h : "auto",
                            showHead: g,
                            showFoot: p,
                            tableLineWidth: null !== (c = e.tableLineWidth) && void 0 !== c ? c : 0,
                            tableLineColor: null !== (f = e.tableLineColor) && void 0 !== f ? f : 200,
                            horizontalPageBreak: w,
                            horizontalPageBreakRepeat: S
                        };
                    }(n, c), y = function(t, e, n) {
                        var r = e.head || [], i = e.body || [], l = e.foot || [];
                        if (e.html) {
                            var a = e.includeHiddenHtml;
                            if (n) {
                                var u = (0, o.parseHtml)(t, e.html, n, a, e.useCss) || {};
                                r = u.head || r, i = u.body || r, l = u.foot || r;
                            } else console.error("Cannot parse html in non browser environment");
                        }
                        return {
                            columns: e.columns || s(r, i, l),
                            head: r,
                            body: i,
                            foot: l
                        };
                    }(n, c, h);
                    return {
                        id: e.tableId,
                        content: y,
                        hooks: p,
                        styles: f,
                        settings: g
                    };
                };
            },
            291: (t, e)=>{
                function n(t) {
                    t.rowHeight ? (console.error("Use of deprecated style rowHeight. It is renamed to minCellHeight."), t.minCellHeight || (t.minCellHeight = t.rowHeight)) : t.columnWidth && (console.error("Use of deprecated style columnWidth. It is renamed to cellWidth."), t.cellWidth || (t.cellWidth = t.columnWidth));
                }
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t, e, o, r) {
                    for(var i = function(e) {
                        e && "object" != typeof e && console.error("The options parameter should be of type object, is: " + typeof e), void 0 !== e.extendWidth && (e.tableWidth = e.extendWidth ? "auto" : "wrap", console.error("Use of deprecated option: extendWidth, use tableWidth instead.")), void 0 !== e.margins && (void 0 === e.margin && (e.margin = e.margins), console.error("Use of deprecated option: margins, use margin instead.")), e.startY && "number" != typeof e.startY && (console.error("Invalid value for startY option", e.startY), delete e.startY), !e.didDrawPage && (e.afterPageContent || e.beforePageContent || e.afterPageAdd) && (console.error("The afterPageContent, beforePageContent and afterPageAdd hooks are deprecated. Use didDrawPage instead"), e.didDrawPage = function(n) {
                            t.applyStyles(t.userStyles), e.beforePageContent && e.beforePageContent(n), t.applyStyles(t.userStyles), e.afterPageContent && e.afterPageContent(n), t.applyStyles(t.userStyles), e.afterPageAdd && n.pageNumber > 1 && n.afterPageAdd(n), t.applyStyles(t.userStyles);
                        }), [
                            "createdHeaderCell",
                            "drawHeaderRow",
                            "drawRow",
                            "drawHeaderCell"
                        ].forEach(function(t) {
                            e[t] && console.error('The "' + t + '" hook has changed in version 3.0, check the changelog for how to migrate.');
                        }), [
                            [
                                "showFoot",
                                "showFooter"
                            ],
                            [
                                "showHead",
                                "showHeader"
                            ],
                            [
                                "didDrawPage",
                                "addPageContent"
                            ],
                            [
                                "didParseCell",
                                "createdCell"
                            ],
                            [
                                "headStyles",
                                "headerStyles"
                            ]
                        ].forEach(function(t) {
                            var n = t[0], o = t[1];
                            e[o] && (console.error("Use of deprecated option " + o + ". Use " + n + " instead"), e[n] = e[o]);
                        }), [
                            [
                                "padding",
                                "cellPadding"
                            ],
                            [
                                "lineHeight",
                                "rowHeight"
                            ],
                            "fontSize",
                            "overflow"
                        ].forEach(function(t) {
                            var n = "string" == typeof t ? t : t[0], o = "string" == typeof t ? t : t[1];
                            void 0 !== e[n] && (void 0 === e.styles[o] && (e.styles[o] = e[n]), console.error("Use of deprecated option: " + n + ", use the style " + o + " instead."));
                        });
                        for(var o = 0, r = [
                            "styles",
                            "bodyStyles",
                            "headStyles",
                            "footStyles"
                        ]; o < r.length; o++){
                            n(e[r[o]] || {});
                        }
                        for(var i = e.columnStyles || {}, l = 0, a = Object.keys(i); l < a.length; l++){
                            n(i[a[l]] || {});
                        }
                    }, l = 0, a = [
                        e,
                        o,
                        r
                    ]; l < a.length; l++){
                        i(a[l]);
                    }
                };
            },
            287: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.Column = e.Cell = e.Row = e.Table = void 0;
                var o = n(913), r = n(662), i = n(200), l = function() {
                    function t(t, e) {
                        this.pageNumber = 1, this.pageCount = 1, this.id = t.id, this.settings = t.settings, this.styles = t.styles, this.hooks = t.hooks, this.columns = e.columns, this.head = e.head, this.body = e.body, this.foot = e.foot;
                    }
                    return t.prototype.getHeadHeight = function(t) {
                        return this.head.reduce(function(e, n) {
                            return e + n.getMaxCellHeight(t);
                        }, 0);
                    }, t.prototype.getFootHeight = function(t) {
                        return this.foot.reduce(function(e, n) {
                            return e + n.getMaxCellHeight(t);
                        }, 0);
                    }, t.prototype.allRows = function() {
                        return this.head.concat(this.body).concat(this.foot);
                    }, t.prototype.callCellHooks = function(t, e, n, o, i, l) {
                        for(var a = 0, s = e; a < s.length; a++){
                            var u = !1 === (0, s[a])(new r.CellHookData(t, this, n, o, i, l));
                            if (n.text = Array.isArray(n.text) ? n.text : [
                                n.text
                            ], u) return !1;
                        }
                        return !0;
                    }, t.prototype.callEndPageHooks = function(t, e) {
                        t.applyStyles(t.userStyles);
                        for(var n = 0, o = this.hooks.didDrawPage; n < o.length; n++){
                            (0, o[n])(new r.HookData(t, this, e));
                        }
                    }, t.prototype.getWidth = function(t) {
                        if ("number" == typeof this.settings.tableWidth) return this.settings.tableWidth;
                        if ("wrap" === this.settings.tableWidth) return this.columns.reduce(function(t, e) {
                            return t + e.wrappedWidth;
                        }, 0);
                        var e = this.settings.margin;
                        return t - e.left - e.right;
                    }, t;
                }();
                e.Table = l;
                var a = function() {
                    function t(t, e, n, r, i) {
                        void 0 === i && (i = !1), this.height = 0, this.raw = t, t instanceof o.HtmlRowInput && (this.raw = t._element, this.element = t._element), this.index = e, this.section = n, this.cells = r, this.spansMultiplePages = i;
                    }
                    return t.prototype.getMaxCellHeight = function(t) {
                        var e = this;
                        return t.reduce(function(t, n) {
                            var o;
                            return Math.max(t, (null === (o = e.cells[n.index]) || void 0 === o ? void 0 : o.height) || 0);
                        }, 0);
                    }, t.prototype.hasRowSpan = function(t) {
                        var e = this;
                        return t.filter(function(t) {
                            var n = e.cells[t.index];
                            return !!n && n.rowSpan > 1;
                        }).length > 0;
                    }, t.prototype.canEntireRowFit = function(t, e) {
                        return this.getMaxCellHeight(e) <= t;
                    }, t.prototype.getMinimumRowHeight = function(t, e) {
                        var n = this;
                        return t.reduce(function(t, r) {
                            var i = n.cells[r.index];
                            if (!i) return 0;
                            var l = i.styles.fontSize / e.scaleFactor() * o.FONT_ROW_RATIO, a = i.padding("vertical") + l;
                            return a > t ? a : t;
                        }, 0);
                    }, t;
                }();
                e.Row = a;
                var s = function() {
                    function t(t, e, n) {
                        var o, r;
                        this.contentHeight = 0, this.contentWidth = 0, this.wrappedWidth = 0, this.minReadableWidth = 0, this.minWidth = 0, this.width = 0, this.height = 0, this.x = 0, this.y = 0, this.styles = e, this.section = n, this.raw = t;
                        var i = t;
                        null == t || "object" != typeof t || Array.isArray(t) ? (this.rowSpan = 1, this.colSpan = 1) : (this.rowSpan = t.rowSpan || 1, this.colSpan = t.colSpan || 1, i = null !== (r = null !== (o = t.content) && void 0 !== o ? o : t.title) && void 0 !== r ? r : t, t._element && (this.raw = t._element));
                        var l = null != i ? "" + i : "";
                        this.text = l.split(/\r\n|\r|\n/g);
                    }
                    return t.prototype.getTextPos = function() {
                        var t, e;
                        if ("top" === this.styles.valign) t = this.y + this.padding("top");
                        else if ("bottom" === this.styles.valign) t = this.y + this.height - this.padding("bottom");
                        else {
                            var n = this.height - this.padding("vertical");
                            t = this.y + n / 2 + this.padding("top");
                        }
                        if ("right" === this.styles.halign) e = this.x + this.width - this.padding("right");
                        else if ("center" === this.styles.halign) {
                            var o = this.width - this.padding("horizontal");
                            e = this.x + o / 2 + this.padding("left");
                        } else e = this.x + this.padding("left");
                        return {
                            x: e,
                            y: t
                        };
                    }, t.prototype.getContentHeight = function(t) {
                        var e = (Array.isArray(this.text) ? this.text.length : 1) * (this.styles.fontSize / t * o.FONT_ROW_RATIO) + this.padding("vertical");
                        return Math.max(e, this.styles.minCellHeight);
                    }, t.prototype.padding = function(t) {
                        var e = (0, i.parseSpacing)(this.styles.cellPadding, 0);
                        return "vertical" === t ? e.top + e.bottom : "horizontal" === t ? e.left + e.right : e[t];
                    }, t;
                }();
                e.Cell = s;
                var u = function() {
                    function t(t, e, n) {
                        this.wrappedWidth = 0, this.minReadableWidth = 0, this.minWidth = 0, this.width = 0, this.dataKey = t, this.raw = e, this.index = n;
                    }
                    return t.prototype.getMaxCustomCellWidth = function(t) {
                        for(var e = 0, n = 0, o = t.allRows(); n < o.length; n++){
                            var r = o[n].cells[this.index];
                            r && "number" == typeof r.styles.cellWidth && (e = Math.max(e, r.styles.cellWidth));
                        }
                        return e;
                    }, t;
                }();
                e.Column = u;
            },
            360: (t, e)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.assign = void 0, e.assign = function(t, e, n, o, r) {
                    if (null == t) throw new TypeError("Cannot convert undefined or null to object");
                    for(var i = Object(t), l = 1; l < arguments.length; l++){
                        var a = arguments[l];
                        if (null != a) for(var s in a)Object.prototype.hasOwnProperty.call(a, s) && (i[s] = a[s]);
                    }
                    return i;
                };
            },
            858: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.createTable = void 0;
                var o = n(323), r = n(287), i = n(189), l = n(913), a = n(360);
                function s(t, e, n, o, i, l) {
                    var a = {};
                    return e.map(function(e, s) {
                        for(var u = 0, h = {}, c = 0, f = 0, p = 0, g = n; p < g.length; p++){
                            var y = g[p];
                            if (null == a[y.index] || 0 === a[y.index].left) if (0 === f) {
                                var v = void 0, m = {};
                                "object" != typeof (v = Array.isArray(e) ? e[y.index - c - u] : e[y.dataKey]) || Array.isArray(v) || (m = (null == v ? void 0 : v.styles) || {});
                                var b = d(t, y, s, i, o, l, m), w = new r.Cell(v, b, t);
                                h[y.dataKey] = w, h[y.index] = w, f = w.colSpan - 1, a[y.index] = {
                                    left: w.rowSpan - 1,
                                    times: f
                                };
                            } else f--, c++;
                            else a[y.index].left--, f = a[y.index].times, u++;
                        }
                        return new r.Row(e, s, t, h);
                    });
                }
                function u(t, e) {
                    var n = {};
                    return t.forEach(function(t) {
                        if (null != t.raw) {
                            var o = function(t, e) {
                                if ("head" === t) {
                                    if ("object" == typeof e) return e.header || e.title || null;
                                    if ("string" == typeof e || "number" == typeof e) return e;
                                } else if ("foot" === t && "object" == typeof e) return e.footer;
                                return null;
                            }(e, t.raw);
                            null != o && (n[t.dataKey] = o);
                        }
                    }), Object.keys(n).length > 0 ? n : null;
                }
                function d(t, e, n, o, r, i, s) {
                    var u, d = (0, l.getTheme)(o);
                    "head" === t ? u = r.headStyles : "body" === t ? u = r.bodyStyles : "foot" === t && (u = r.footStyles);
                    var h = (0, a.assign)({}, d.table, d[t], r.styles, u), c = r.columnStyles[e.dataKey] || r.columnStyles[e.index] || {}, f = "body" === t ? c : {}, p = "body" === t && n % 2 == 0 ? (0, a.assign)({}, d.alternateRow, r.alternateRowStyles) : {}, g = (0, l.defaultStyles)(i), y = (0, a.assign)({}, g, h, p, f);
                    return (0, a.assign)(y, s);
                }
                e.createTable = function(t, e) {
                    var n = new o.DocHandler(t), l = function(t, e) {
                        var n = t.content, o = function(t) {
                            return t.map(function(t, e) {
                                var n, o, i;
                                return i = "object" == typeof t && null !== (o = null !== (n = t.dataKey) && void 0 !== n ? n : t.key) && void 0 !== o ? o : e, new r.Column(i, t, e);
                            });
                        }(n.columns);
                        if (0 === n.head.length) {
                            (i = u(o, "head")) && n.head.push(i);
                        }
                        if (0 === n.foot.length) {
                            var i;
                            (i = u(o, "foot")) && n.foot.push(i);
                        }
                        var l = t.settings.theme, a = t.styles;
                        return {
                            columns: o,
                            head: s("head", n.head, o, a, l, e),
                            body: s("body", n.body, o, a, l, e),
                            foot: s("foot", n.foot, o, a, l, e)
                        };
                    }(e, n.scaleFactor()), a = new r.Table(e, l);
                    return (0, i.calculateWidths)(n, a), n.applyStyles(n.userStyles), a;
                };
            },
            49: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.addPage = e.drawTable = void 0;
                var o = n(913), r = n(200), i = n(287), l = n(323), a = n(360), s = n(938), u = n(435);
                function d(t, e, n) {
                    var r = t.styles.fontSize / n.scaleFactor() * o.FONT_ROW_RATIO, i = t.padding("vertical"), l = Math.floor((e - i) / r);
                    return Math.max(0, l);
                }
                function h(t, e, n, o, r, l, s) {
                    var u = function(t, e, n, o) {
                        var r = e.settings.margin.bottom, i = e.settings.showFoot;
                        ("everyPage" === i || "lastPage" === i && n) && (r += e.getFootHeight(e.columns));
                        return t.pageSize().height - o.y - r;
                    }(t, e, o, l);
                    if (n.canEntireRowFit(u, s)) c(t, e, n, l, s);
                    else if (function(t, e, n, o) {
                        var r = t.pageSize().height, i = o.settings.margin, l = r - (i.top + i.bottom);
                        "body" === e.section && (l -= o.getHeadHeight(o.columns) + o.getFootHeight(o.columns));
                        var a = e.getMinimumRowHeight(o.columns, t), s = a < n;
                        if (a > l) return console.error("Will not be able to print row " + e.index + " correctly since it's minimum height is larger than page height"), !0;
                        if (!s) return !1;
                        var u = e.hasRowSpan(o.columns);
                        return e.getMaxCellHeight(o.columns) > l ? (u && console.error("The content of row " + e.index + " will not be drawn correctly since drawing rows with a height larger than the page height and has cells with rowspans is not supported."), !0) : !u && "avoid" !== o.settings.rowPageBreak;
                    }(t, n, u, e)) {
                        var f = function(t, e, n, o) {
                            var r = {};
                            t.spansMultiplePages = !0, t.height = 0;
                            for(var l = 0, s = 0, u = n.columns; s < u.length; s++){
                                var h = u[s];
                                if (m = t.cells[h.index]) {
                                    Array.isArray(m.text) || (m.text = [
                                        m.text
                                    ]);
                                    var c = new i.Cell(m.raw, m.styles, m.section);
                                    (c = (0, a.assign)(c, m)).text = [];
                                    var f = d(m, e, o);
                                    m.text.length > f && (c.text = m.text.splice(f, m.text.length));
                                    var p = o.scaleFactor();
                                    m.contentHeight = m.getContentHeight(p), m.contentHeight >= e && (m.contentHeight = e, c.styles.minCellHeight -= e), m.contentHeight > t.height && (t.height = m.contentHeight), c.contentHeight = c.getContentHeight(p), c.contentHeight > l && (l = c.contentHeight), r[h.index] = c;
                                }
                            }
                            var g = new i.Row(t.raw, -1, t.section, r, !0);
                            g.height = l;
                            for(var y = 0, v = n.columns; y < v.length; y++){
                                var m;
                                h = v[y], (c = g.cells[h.index]) && (c.height = g.height), (m = t.cells[h.index]) && (m.height = t.height);
                            }
                            return g;
                        }(n, u, e, t);
                        c(t, e, n, l, s), p(t, e, r, l, s), h(t, e, f, o, r, l, s);
                    } else p(t, e, r, l, s), h(t, e, n, o, r, l, s);
                }
                function c(t, e, n, o, r) {
                    o.x = e.settings.margin.left;
                    for(var i = 0, l = r; i < l.length; i++){
                        var a = l[i], u = n.cells[a.index];
                        if (u) if (t.applyStyles(u.styles), u.x = o.x, u.y = o.y, !1 !== e.callCellHooks(t, e.hooks.willDrawCell, u, n, a, o)) {
                            f(t, u, o);
                            var d = u.getTextPos();
                            (0, s.default)(u.text, d.x, d.y, {
                                halign: u.styles.halign,
                                valign: u.styles.valign,
                                maxWidth: Math.ceil(u.width - u.padding("left") - u.padding("right"))
                            }, t.getDocument()), e.callCellHooks(t, e.hooks.didDrawCell, u, n, a, o), o.x += a.width;
                        } else o.x += a.width;
                        else o.x += a.width;
                    }
                    o.y += n.height;
                }
                function f(t, e, n) {
                    var o = e.styles;
                    if (t.getDocument().setFillColor(t.getDocument().getFillColor()), "number" == typeof o.lineWidth) {
                        var i = (0, r.getFillStyle)(o.lineWidth, o.fillColor);
                        i && t.rect(e.x, n.y, e.width, e.height, i);
                    } else if ("object" == typeof o.lineWidth) {
                        t.rect(e.x, n.y, e.width, e.height, "F");
                        var l = Object.keys(o.lineWidth), a = o.lineWidth;
                        l.map(function(i) {
                            var l = (0, r.getFillStyle)(a[i], o.fillColor);
                            !function(t, e, n, o, r, i) {
                                var l, a, s, u;
                                switch(o){
                                    case "top":
                                        l = n.x, a = n.y, s = n.x + e.width, u = n.y;
                                        break;
                                    case "left":
                                        l = n.x, a = n.y, s = n.x, u = n.y + e.height;
                                        break;
                                    case "right":
                                        l = n.x + e.width, a = n.y, s = n.x + e.width, u = n.y + e.height;
                                        break;
                                    default:
                                        l = n.x, a = n.y + e.height - i, s = n.x + e.width, u = n.y + e.height - i;
                                }
                                t.getDocument().setLineWidth(i), t.getDocument().line(l, a, s, u, r);
                            }(t, e, n, i, l || "S", a[i]);
                        });
                    }
                }
                function p(t, e, n, o, i) {
                    void 0 === i && (i = []), t.applyStyles(t.userStyles), "everyPage" === e.settings.showFoot && e.foot.forEach(function(n) {
                        return c(t, e, n, o, i);
                    }), e.callEndPageHooks(t, o);
                    var l = e.settings.margin;
                    (0, r.addTableBorder)(t, e, n, o), g(t), e.pageNumber++, e.pageCount++, o.x = l.left, o.y = l.top, n.y = l.top, "everyPage" === e.settings.showHead && e.head.forEach(function(n) {
                        return c(t, e, n, o, i);
                    });
                }
                function g(t) {
                    var e = t.pageNumber();
                    t.setPage(e + 1), t.pageNumber() === e && t.addPage();
                }
                e.drawTable = function(t, e) {
                    var n = e.settings, o = n.startY, i = n.margin, s = {
                        x: i.left,
                        y: o
                    }, d = e.getHeadHeight(e.columns) + e.getFootHeight(e.columns), f = o + i.bottom + d;
                    "avoid" === n.pageBreak && (f += e.allRows().reduce(function(t, e) {
                        return t + e.height;
                    }, 0));
                    var y = new l.DocHandler(t);
                    ("always" === n.pageBreak || null != n.startY && f > y.pageSize().height) && (g(y), s.y = i.top);
                    var v = (0, a.assign)({}, s);
                    e.startPageNumber = y.pageNumber(), !0 === n.horizontalPageBreak ? function(t, e, n, o) {
                        u.default.calculateAllColumnsCanFitInPage(t, e).map(function(r, i) {
                            t.applyStyles(t.userStyles), i > 0 ? p(t, e, n, o, r.columns) : function(t, e, n, o) {
                                var r = e.settings;
                                t.applyStyles(t.userStyles), ("firstPage" === r.showHead || "everyPage" === r.showHead) && e.head.forEach(function(r) {
                                    return c(t, e, r, n, o);
                                });
                            }(t, e, o, r.columns), function(t, e, n, o, r) {
                                t.applyStyles(t.userStyles), e.body.forEach(function(i, l) {
                                    var a = l === e.body.length - 1;
                                    h(t, e, i, a, n, o, r);
                                });
                            }(t, e, n, o, r.columns), function(t, e, n, o) {
                                var r = e.settings;
                                t.applyStyles(t.userStyles), ("lastPage" === r.showFoot || "everyPage" === r.showFoot) && e.foot.forEach(function(r) {
                                    return c(t, e, r, n, o);
                                });
                            }(t, e, o, r.columns);
                        });
                    }(y, e, v, s) : (y.applyStyles(y.userStyles), "firstPage" !== n.showHead && "everyPage" !== n.showHead || e.head.forEach(function(t) {
                        return c(y, e, t, s, e.columns);
                    }), y.applyStyles(y.userStyles), e.body.forEach(function(t, n) {
                        var o = n === e.body.length - 1;
                        h(y, e, t, o, v, s, e.columns);
                    }), y.applyStyles(y.userStyles), "lastPage" !== n.showFoot && "everyPage" !== n.showFoot || e.foot.forEach(function(t) {
                        return c(y, e, t, s, e.columns);
                    })), (0, r.addTableBorder)(y, e, v, s), e.callEndPageHooks(y, s), e.finalY = s.y, t.lastAutoTable = e, t.previousAutoTable = e, t.autoTable && (t.autoTable.previous = e), y.applyStyles(y.userStyles);
                }, e.addPage = p;
            },
            435: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var o = n(200), r = function(t, e) {
                    var n = (0, o.parseSpacing)(e.settings.margin, 0);
                    return t.pageSize().width - (n.left + n.right);
                }, i = function(t, e, n) {
                    void 0 === n && (n = {});
                    var o = r(t, e), i = e.settings.horizontalPageBreakRepeat, l = null, a = [], s = [], u = e.columns.length, d = n && n.start ? n.start : 0;
                    for(null != i && (l = e.columns.find(function(t) {
                        return t.dataKey === i || t.index === i;
                    })) && (a.push(l.index), s.push(e.columns[l.index]), o -= l.wrappedWidth); d < u;)if ((null == l ? void 0 : l.index) !== d) {
                        var h = e.columns[d].wrappedWidth;
                        if (o < h) {
                            0 !== d && d !== n.start || (a.push(d), s.push(e.columns[d]));
                            break;
                        }
                        a.push(d), s.push(e.columns[d]), o -= h, d++;
                    } else d++;
                    return {
                        colIndexes: a,
                        columns: s,
                        lastIndex: d
                    };
                };
                e.default = {
                    getColumnsCanFitInPage: i,
                    calculateAllColumnsCanFitInPage: function(t, e) {
                        for(var n = [], o = 0, r = e.columns.length; o < r;){
                            var l = i(t, e, {
                                start: 0 === o ? 0 : o
                            });
                            l && l.columns && l.columns.length ? (o = l.lastIndex, n.push(l)) : o++;
                        }
                        return n;
                    },
                    getPageAvailableWidth: r
                };
            },
            189: (t, e, n)=>{
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.ellipsize = e.resizeColumns = e.calculateWidths = void 0;
                var o = n(200), r = n(435);
                function i(t, e, n) {
                    for(var o = e, r = t.reduce(function(t, e) {
                        return t + e.wrappedWidth;
                    }, 0), l = 0; l < t.length; l++){
                        var a = t[l], s = o * (a.wrappedWidth / r), u = a.width + s, d = n(a), h = u < d ? d : u;
                        e -= h - a.width, a.width = h;
                    }
                    if (e = Math.round(1e10 * e) / 1e10) {
                        var c = t.filter(function(t) {
                            return !(e < 0) || t.width > n(t);
                        });
                        c.length && (e = i(c, e, n));
                    }
                    return e;
                }
                function l(t, e, n, r, i) {
                    return t.map(function(t) {
                        return function(t, e, n, r, i) {
                            var l = 1e4 * r.scaleFactor();
                            if ((e = Math.ceil(e * l) / l) >= (0, o.getStringWidth)(t, n, r)) return t;
                            for(; e < (0, o.getStringWidth)(t + i, n, r) && !(t.length <= 1);)t = t.substring(0, t.length - 1);
                            return t.trim() + i;
                        }(t, e, n, r, i);
                    });
                }
                e.calculateWidths = function(t, e) {
                    !function(t, e) {
                        var n = t.scaleFactor(), i = e.settings.horizontalPageBreak, l = r.default.getPageAvailableWidth(t, e);
                        e.allRows().forEach(function(r) {
                            for(var a = 0, s = e.columns; a < s.length; a++){
                                var u = s[a], d = r.cells[u.index];
                                if (d) {
                                    var h = e.hooks.didParseCell;
                                    e.callCellHooks(t, h, d, r, u, null);
                                    var c = d.padding("horizontal");
                                    d.contentWidth = (0, o.getStringWidth)(d.text, d.styles, t) + c;
                                    var f = (0, o.getStringWidth)(d.text.join(" ").split(/\s+/), d.styles, t);
                                    if (d.minReadableWidth = f + d.padding("horizontal"), "number" == typeof d.styles.cellWidth) d.minWidth = d.styles.cellWidth, d.wrappedWidth = d.styles.cellWidth;
                                    else if ("wrap" === d.styles.cellWidth || !0 === i) d.contentWidth > l ? (d.minWidth = l, d.wrappedWidth = l) : (d.minWidth = d.contentWidth, d.wrappedWidth = d.contentWidth);
                                    else {
                                        var p = 10 / n;
                                        d.minWidth = d.styles.minCellWidth || p, d.wrappedWidth = d.contentWidth, d.minWidth > d.wrappedWidth && (d.wrappedWidth = d.minWidth);
                                    }
                                }
                            }
                        }), e.allRows().forEach(function(t) {
                            for(var n = 0, o = e.columns; n < o.length; n++){
                                var r = o[n], i = t.cells[r.index];
                                if (i && 1 === i.colSpan) r.wrappedWidth = Math.max(r.wrappedWidth, i.wrappedWidth), r.minWidth = Math.max(r.minWidth, i.minWidth), r.minReadableWidth = Math.max(r.minReadableWidth, i.minReadableWidth);
                                else {
                                    var l = e.styles.columnStyles[r.dataKey] || e.styles.columnStyles[r.index] || {}, a = l.cellWidth || l.minCellWidth;
                                    a && "number" == typeof a && (r.minWidth = a, r.wrappedWidth = a);
                                }
                                i && (i.colSpan > 1 && !r.minWidth && (r.minWidth = i.minWidth), i.colSpan > 1 && !r.wrappedWidth && (r.wrappedWidth = i.minWidth));
                            }
                        });
                    }(t, e);
                    var n = [], a = 0;
                    e.columns.forEach(function(t) {
                        var o = t.getMaxCustomCellWidth(e);
                        o ? t.width = o : (t.width = t.wrappedWidth, n.push(t)), a += t.width;
                    });
                    var s = e.getWidth(t.pageSize().width) - a;
                    s && (s = i(n, s, function(t) {
                        return Math.max(t.minReadableWidth, t.minWidth);
                    })), s && (s = i(n, s, function(t) {
                        return t.minWidth;
                    })), s = Math.abs(s), !e.settings.horizontalPageBreak && s > .1 / t.scaleFactor() && (s = s < 1 ? s : Math.round(s), console.error("Of the table content, " + s + " units width could not fit page")), function(t) {
                        for(var e = t.allRows(), n = 0; n < e.length; n++)for(var o = e[n], r = null, i = 0, l = 0, a = 0; a < t.columns.length; a++){
                            var s = t.columns[a];
                            if ((l -= 1) > 1 && t.columns[a + 1]) i += s.width, delete o.cells[s.index];
                            else if (r) {
                                var u = r;
                                delete o.cells[s.index], r = null, u.width = s.width + i;
                            } else {
                                if (!(u = o.cells[s.index])) continue;
                                if (l = u.colSpan, i = 0, u.colSpan > 1) {
                                    r = u, i += s.width;
                                    continue;
                                }
                                u.width = s.width + i;
                            }
                        }
                    }(e), function(t, e) {
                        for(var n = {
                            count: 0,
                            height: 0
                        }, o = 0, r = t.allRows(); o < r.length; o++){
                            for(var i = r[o], a = 0, s = t.columns; a < s.length; a++){
                                var u = s[a], d = i.cells[u.index];
                                if (d) {
                                    e.applyStyles(d.styles, !0);
                                    var h = d.width - d.padding("horizontal");
                                    "linebreak" === d.styles.overflow ? d.text = e.splitTextToSize(d.text, h + 1 / e.scaleFactor(), {
                                        fontSize: d.styles.fontSize
                                    }) : "ellipsize" === d.styles.overflow ? d.text = l(d.text, h, d.styles, e, "...") : "hidden" === d.styles.overflow ? d.text = l(d.text, h, d.styles, e, "") : "function" == typeof d.styles.overflow && (d.text = d.styles.overflow(d.text, h)), d.contentHeight = d.getContentHeight(e.scaleFactor());
                                    var c = d.contentHeight / d.rowSpan;
                                    d.rowSpan > 1 && n.count * n.height < c * d.rowSpan ? n = {
                                        height: c,
                                        count: d.rowSpan
                                    } : n && n.count > 0 && n.height > c && (c = n.height), c > i.height && (i.height = c);
                                }
                            }
                            n.count--;
                        }
                    }(e, t), function(t) {
                        for(var e = {}, n = 1, o = t.allRows(), r = 0; r < o.length; r++)for(var i = o[r], l = 0, a = t.columns; l < a.length; l++){
                            var s = a[l], u = e[s.index];
                            if (n > 1) n--, delete i.cells[s.index];
                            else if (u) u.cell.height += i.height, n = u.cell.colSpan, delete i.cells[s.index], u.left--, u.left <= 1 && delete e[s.index];
                            else {
                                var d = i.cells[s.index];
                                if (!d) continue;
                                if (d.height = i.height, d.rowSpan > 1) {
                                    var h = o.length - r, c = d.rowSpan > h ? h : d.rowSpan;
                                    e[s.index] = {
                                        cell: d,
                                        left: c,
                                        row: i
                                    };
                                }
                            }
                        }
                    }(e);
                }, e.resizeColumns = i, e.ellipsize = l;
            },
            84: (e)=>{
                if (void 0 === t) {
                    var n = new Error("Cannot find module 'undefined'");
                    throw n.code = "MODULE_NOT_FOUND", n;
                }
                e.exports = t;
            }
        }, n = {};
        function o(t) {
            var r = n[t];
            if (void 0 !== r) return r.exports;
            var i = n[t] = {
                exports: {}
            };
            return e[t].call(i.exports, i, i.exports, o), i.exports;
        }
        var r = {};
        return (()=>{
            var t = r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Cell = t.Column = t.Row = t.Table = t.CellHookData = t.__drawTable = t.__createTable = t.applyPlugin = void 0;
            var e = o(790), n = o(587), i = o(49), l = o(858), a = o(287);
            Object.defineProperty(t, "Table", {
                enumerable: !0,
                get: function() {
                    return a.Table;
                }
            });
            var s = o(662);
            Object.defineProperty(t, "CellHookData", {
                enumerable: !0,
                get: function() {
                    return s.CellHookData;
                }
            });
            var u = o(287);
            function d(t) {
                (0, e.default)(t);
            }
            Object.defineProperty(t, "Cell", {
                enumerable: !0,
                get: function() {
                    return u.Cell;
                }
            }), Object.defineProperty(t, "Column", {
                enumerable: !0,
                get: function() {
                    return u.Column;
                }
            }), Object.defineProperty(t, "Row", {
                enumerable: !0,
                get: function() {
                    return u.Row;
                }
            }), t.applyPlugin = d, t.default = function(t, e) {
                var o = (0, n.parseInput)(t, e), r = (0, l.createTable)(t, o);
                (0, i.drawTable)(t, r);
            }, t.__createTable = function(t, e) {
                var o = (0, n.parseInput)(t, e);
                return (0, l.createTable)(t, o);
            }, t.__drawTable = function(t, e) {
                (0, i.drawTable)(t, e);
            };
            try {
                var h = o(84);
                h.jsPDF && (h = h.jsPDF), d(h);
            } catch (t) {}
        })(), r;
    })();
});
}}),
}]);

//# sourceMappingURL=node_modules_d657d4e0._.js.map